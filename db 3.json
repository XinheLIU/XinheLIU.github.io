{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1741956160417},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍.md","hash":"3bf206cbcff626d1a271f15e27a92c95c0cc7e39","modified":1741956708538},{"_id":"source/contact/index.md","hash":"4c40b309e6cba5d57cea083a0d4158083e50509d","modified":1741955677885},{"_id":"source/friends/index.md","hash":"3e697078527750a30483dc30d7540c91def685ea","modified":1741955677885},{"_id":"source/about/index.md","hash":"e367dad4f4445eb507fa7d39df8c2414b311c482","modified":1741955677885},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/召回-1.png","hash":"e1c84fe15453717f464155b2f0b8f788a1eef60e","modified":1741955677873},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/微博-推荐架构.png","hash":"44539897bea85d20b85885ebc5c245653606a5d1","modified":1741955677875},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/推荐架构-1.png","hash":"baf0d56fde3b62e2b187c99b8a50f80e9bdf92ec","modified":1741955677877},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/推荐系统-指标.png","hash":"f93f8bb2e529717ec84d4590bdc93138a6581e0b","modified":1741955677880},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/粗排.png","hash":"d00600c52c992c959112a61162194f6ba2844d4e","modified":1741955677882},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/数据层.png","hash":"c5707cf0bd3127691cada812b71fdce13635f19b","modified":1741955677880},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/精排.png","hash":"8441a31a7c64fefab286ed1eae64349b1122a50c","modified":1741955677883},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/重排.png","hash":"4fb0387cb99cdafa6732600df6ef11226918b09b","modified":1741955677884},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/召回-2.png","hash":"2b77bea78d628f614350fcea09fc473f0e70f189","modified":1741955677874},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"06889bee30e4c39479467021da434d3a6a0990fc","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"6497b70356271fd6f9f1dc862353be844c457a53","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"a93d7b3990e45bc7247eecf01888f71674887a63","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"57281fc3812c877ec2d8e89ec87ede57b9789d4c","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"1b89d0caba03a66a43d9c290a5e94fa438a89210","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e9d4678e14be5e3cd5e34d783e5af6d6626092f5","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"0e94f5722d4c44d3cc91be2f4fd30b9ab503b868","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"0039146b8ccbdf9b9f8bee58fc6c238f0e9921fc","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"f608400a08cf137ab15ec1f44bac551950afe879","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1741931054521},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1741931054521},{"_id":"source/_posts/推荐系统101-1-推荐系统介绍/推荐架构-2.png","hash":"688c22ae2f6e3753e1b816226e5dcc4020d6cdff","modified":1741955677879},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1741931054521},{"_id":"public/about/index.html","hash":"53059c71460cd037a110bd84a4e63839fffee824","modified":1741957157612},{"_id":"public/contact/index.html","hash":"4db18cc204cd3276cf56b376845a9394c67f2cab","modified":1741957157612},{"_id":"public/friends/index.html","hash":"b49765db97af879c0fa2547b18dd9c35c4cb5ec3","modified":1741957157612},{"_id":"public/2025/03/14/hello-world/index.html","hash":"5cafb7ce298c73c5f9064b9a6345bc6cfbd515dc","modified":1741957157612},{"_id":"public/recsys/101-intro/index.html","hash":"38bfe0b67ba201c36fc70c5ed94b2bc760ac092f","modified":1741957157612},{"_id":"public/categories/技术/index.html","hash":"3531f9f0bac5968217725ebb7e0e3f99a8642b29","modified":1741957157612},{"_id":"public/index.html","hash":"0364c263e5eb5e1df8e725847ab72e759406488e","modified":1741957157612},{"_id":"public/archives/index.html","hash":"c41e068201b4917c53b5bd801cb076b7537fc91c","modified":1741957157612},{"_id":"public/archives/2023/index.html","hash":"dad14626f6614fe10aeac5327555934afb61f23e","modified":1741957157612},{"_id":"public/archives/2023/12/index.html","hash":"77907c9f2e672e1eb1de4a3f0517466113147f38","modified":1741957157612},{"_id":"public/archives/2025/index.html","hash":"44168a92358a4dc8915a1d3577f4d72c5efd9922","modified":1741957157612},{"_id":"public/archives/2025/03/index.html","hash":"6477af1d3a77ecda1356386575eb3708568d0bc4","modified":1741957157612},{"_id":"public/tags/搜广推/index.html","hash":"fe2ba5666111da78c1392c067fa9ff1ed68d8fec","modified":1741957157612},{"_id":"public/tags/人工智能和机器学习/index.html","hash":"adabf51e83d6b64c8e1b766f13597a82a7a5a908","modified":1741957157612},{"_id":"public/css/style.css","hash":"ecc329be740a220cc188ff49b02da4847cb7ee5e","modified":1741957157612},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1741957157612},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1741957157612},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1741957157612},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1741957157612},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1741957157612}],"Category":[{"name":"技术","_id":"cm88sbd7300055gl423k24d2q"}],"Data":[],"Page":[{"title":"关于我","date":"2025-02-14T04:44:11.000Z","type":"about","layout":"about","_content":"\n## 个人简介\n\n这里是小司机，一个学习写作的人\n\n## 专业技能\n\n- 编程语言：Python, C++, Java\n- 数据科学：数据分析，机器学习, 深度学习\n\n## 联系方式\n\n- Email: windgod46@gmail.com\n- GitHub: [XinheLIU](https://github.com/XinheLIU)\n\n欢迎访问我的博客，希望这里的内容对你有所帮助！\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2025-02-14 12:44:11\ntype: \"about\"\nlayout: \"about\"\n---\n\n## 个人简介\n\n这里是小司机，一个学习写作的人\n\n## 专业技能\n\n- 编程语言：Python, C++, Java\n- 数据科学：数据分析，机器学习, 深度学习\n\n## 联系方式\n\n- Email: windgod46@gmail.com\n- GitHub: [XinheLIU](https://github.com/XinheLIU)\n\n欢迎访问我的博客，希望这里的内容对你有所帮助！\n","updated":"2025-03-14T12:34:37.885Z","path":"about/index.html","comments":1,"_id":"cm88sbd7000005gl4496o5vpo","content":"<h2 id=\"个人简介\">个人简介</h2>\n<p>这里是小司机，一个学习写作的人</p>\n<h2 id=\"专业技能\">专业技能</h2>\n<ul>\n<li>编程语言：Python, C++, Java</li>\n<li>数据科学：数据分析，机器学习, 深度学习</li>\n</ul>\n<h2 id=\"联系方式\">联系方式</h2>\n<ul>\n<li>Email: <a href=\"mailto:windgod46@gmail.com\">windgod46@gmail.com</a></li>\n<li>GitHub: <a href=\"https://github.com/XinheLIU\">XinheLIU</a></li>\n</ul>\n<p>欢迎访问我的博客，希望这里的内容对你有所帮助！</p>\n","excerpt":"","more":"<h2 id=\"个人简介\">个人简介</h2>\n<p>这里是小司机，一个学习写作的人</p>\n<h2 id=\"专业技能\">专业技能</h2>\n<ul>\n<li>编程语言：Python, C++, Java</li>\n<li>数据科学：数据分析，机器学习, 深度学习</li>\n</ul>\n<h2 id=\"联系方式\">联系方式</h2>\n<ul>\n<li>Email: <a href=\"mailto:windgod46@gmail.com\">windgod46@gmail.com</a></li>\n<li>GitHub: <a href=\"https://github.com/XinheLIU\">XinheLIU</a></li>\n</ul>\n<p>欢迎访问我的博客，希望这里的内容对你有所帮助！</p>\n"},{"title":"联系我","date":"2025-03-14T04:44:11.000Z","type":"contact","layout":"contact","_content":"\n## 联系方式\n\n如果您有任何问题、建议或合作意向，可以通过以下方式联系我：\n\n- **Email**: <你的邮箱地址>\n- **GitHub**: [XinheLIU](https://github.com/XinheLIU)\n\n期待与您的交流！\n","source":"contact/index.md","raw":"---\ntitle: 联系我\ndate: 2025-03-14 12:44:11\ntype: \"contact\"\nlayout: \"contact\"\n---\n\n## 联系方式\n\n如果您有任何问题、建议或合作意向，可以通过以下方式联系我：\n\n- **Email**: <你的邮箱地址>\n- **GitHub**: [XinheLIU](https://github.com/XinheLIU)\n\n期待与您的交流！\n","updated":"2025-03-14T12:34:37.885Z","path":"contact/index.html","comments":1,"_id":"cm88sbd7200025gl4g1vrb3do","content":"<h2 id=\"联系方式\">联系方式</h2>\n<p>如果您有任何问题、建议或合作意向，可以通过以下方式联系我：</p>\n<ul>\n<li><strong>Email</strong>: &lt;你的邮箱地址&gt;</li>\n<li><strong>GitHub</strong>: <a href=\"https://github.com/XinheLIU\">XinheLIU</a></li>\n</ul>\n<p>期待与您的交流！</p>\n","excerpt":"","more":"<h2 id=\"联系方式\">联系方式</h2>\n<p>如果您有任何问题、建议或合作意向，可以通过以下方式联系我：</p>\n<ul>\n<li><strong>Email</strong>: &lt;你的邮箱地址&gt;</li>\n<li><strong>GitHub</strong>: <a href=\"https://github.com/XinheLIU\">XinheLIU</a></li>\n</ul>\n<p>期待与您的交流！</p>\n"},{"title":"友情链接","date":"2025-03-14T04:44:12.000Z","type":"friends","layout":"friends","_content":"\n## 我的朋友们\n\n<!-- 这里可以添加友情链接，matery主题会自动渲染 -->\n\n如果您希望添加友链，请在下方评论区留言或通过邮件联系我。\n","source":"friends/index.md","raw":"---\ntitle: 友情链接\ndate: 2025-03-14 12:44:12\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n## 我的朋友们\n\n<!-- 这里可以添加友情链接，matery主题会自动渲染 -->\n\n如果您希望添加友链，请在下方评论区留言或通过邮件联系我。\n","updated":"2025-03-14T12:34:37.885Z","path":"friends/index.html","comments":1,"_id":"cm88sbd7200035gl4862i62t3","content":"<h2 id=\"我的朋友们\">我的朋友们</h2>\n<!-- 这里可以添加友情链接，matery主题会自动渲染 -->\n<p>如果您希望添加友链，请在下方评论区留言或通过邮件联系我。</p>\n","excerpt":"","more":"<h2 id=\"我的朋友们\">我的朋友们</h2>\n<!-- 这里可以添加友情链接，matery主题会自动渲染 -->\n<p>如果您希望添加友链，请在下方评论区留言或通过邮件联系我。</p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-03-14T12:34:37.872Z","updated":"2025-03-14T12:42:40.417Z","comments":1,"layout":"post","photos":[],"_id":"cm88sbd7100015gl4b4ac9h34","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"layout":"post","title":"推荐系统101(1)推荐系统介绍","date":"2023-12-13T04:00:00.000Z","_content":"\n- [现代推荐系统](#现代推荐系统)\n- [推荐系统架构](#推荐系统架构)\n- [召回模块](#召回模块)\n  - [粗排模块](#粗排模块)\n  - [精排](#精排)\n  - [重排/混排](#重排混排)\n  - [数据层](#数据层)\n  - [推荐系统的评估](#推荐系统的评估)\n- [参考](#参考)\n\n### 推荐系统的发展历史\n\n[推荐系统](https://en.wikipedia.org/wiki/Recommender_system)是一种信息过滤系统，用于预测用户对物品的\"评分\"或\"偏好\"\n\n一个常见的推荐系统架构：\n\n\n- 目标：匹配用户和信息\n- 召回：猜用户可能喜欢什么内容\n- 排序服务: 确定用户最喜欢什么\n- 重排序（Reranking） 服务：不要出现同样分类、重复密集等 \n- 应用场景：Feed流 信息流\n\n{% mermaid %}\nflowchart LR\n    subgraph \"推荐技术框架\"\n        direction LR\n        A1[\"理点\"] --> B1[\"用户特征\"]\n        A2[\"用户信息\"] --> B1\n        A3[\"信息格式化\"] --> B2[\"信息特征\"]\n        \n        B1 --> C[\"召回服务\"]\n        B2 --> C\n        \n        C --> D[\"排序服务\"]\n        D --> E[\"重排序服务\"]\n        E --> F[\"应用场景\"]\n    end\n{% endmermaid %}\n\n推荐系统发展历史：\n\n1. 早期阶段（1990年代初）：推荐系统起源于图书馆学科，基于过滤和关键词匹配。代表性产品/服务：早期的图书馆检索系统、学术论文推荐系统。\n2. 协同过滤时期（1990年代末至2000年代初）：引入协同过滤算法，通过分析用户行为，找到相似用户或物品进行推荐。代表性产品/服务：亚马逊的商品推荐、Netflix的电影推荐、Last.fm的音乐推荐。\n3. 内容过滤时期（2000年代中期）：基于内容特征和用户偏好进行推荐，利用物品的元数据和用户画像进行匹配。代表性产品/服务：Google News的新闻推荐、Pandora的音乐推荐、StumbleUpon的网页推荐。\n4. 混合推荐时期（2000年代后期至今）：将协同过滤、内容过滤等不同算法进行组合，提供更准确和多样化的推荐结果。代表性产品/服务：淘宝的商品推荐、Spotify的音乐推荐、LinkedIn的职业推荐。\n5. 个性化推荐时期（2010年代初）：以今日头条为代表，通过机器学习算法实现千人千面的个性化推荐。张一鸣团队开发的推荐算法成为行业标杆，推动了推荐系统的普及和应用。\n6. 深度学习时期（2010年代中期至今）：利用深度学习技术提取更丰富的特征，结合用户行为序列、上下文信息等，进一步提高推荐的准确性。代表性产品/服务：YouTube的视频推荐、TikTok的短视频推荐、Instagram的内容推荐。\n7. 云服务化时期（2020年代至今）：推荐算法在各大厂已经变成标准化的云服务，通过API接口提供给开发者使用。代表性服务：AWS Personalize、Google Recommendations AI、Azure Personalizer。这些服务封装了常用的推荐算法，如协同过滤、内容过滤和混合推荐，同时注重用户隐私保护，仅使用必要的行为数据进行推荐。\n\n### 协同过滤算法\n\n协同过滤算法是推荐系统中的一种基本算法，它基于用户行为数据来推荐物品，对现代推荐系统发展有着深远影响。协同过滤奠定了基于用户行为数据进行推荐的基础思想，为后续的矩阵分解、因子分解机(FFM)、深度学习推荐模型等提供了理论基础。它引入的用户-物品交互矩阵成为推荐系统数据组织的标准方式，而其解决稀疏性和冷启动问题的思路也启发了混合推荐、多模态推荐等新方法。现代推荐系统如YouTube的深度神经网络推荐和TikTok的多目标优化推荐，都能看到协同过滤的影子。\n\n现在大厂提供的标准化推荐服务（例如火山引擎），大多都是基于协同过滤算法。\n\n协同过滤算法主要分为以下三种：\n\n1. **基于内容的推荐**：如果用户浏览或购买过某种类型的内容，则给用户推荐这种类型下的其它内容。例如，向用户推荐某位主演的其他电影，这种是基于内容的推荐。\n2. **基于用户的协同过滤**：基于\"跟用户喜好相似的人喜欢的东西，用户也很有可能喜欢\"的原理。通过分析用户之间的相似性，找到相似用户群体，然后推荐相似用户喜欢但目标用户尚未接触的物品。例如，\"购买了该商品的用户还购买了什么商品\"这类推荐。\n3. **基于物品的协同过滤**：基于\"与用户喜欢的物品相似的物品，用户也可能喜欢\"的原理。通过分析物品之间的相似关系，向用户推荐与其已经喜欢的物品相似的其他物品。例如，用户购买了某个商品后，系统会推荐与该商品经常一起购买的相关商品。\n\n## 现代推荐系统\n\n现代推荐系统的主要流程采用**数据流优先的设计原则**，具有高度灵活性。\n\n其核心流程为：\n\n1. 收集用户行为数据\n2. 拼接训练样本\n3. 模型训练\n4. 生成推荐\n5. 用户反馈\n6. 模型更新\n\n这种设计实现了端到端的实时更新能力，具体特点包括：\n\n1. 模型训练与部署\n\n   - 支持多种训练框架：LR（逻辑回归）、FM（因子分解机）、TensorFlow、DeepRec等\n   - 自研模型存储系统：统一的数据流架构和模型格式\n   - 快速更新：模型训练到线上更新可在分钟级完成\n   - 多Backend支持：可灵活切换不同计算后端\n\n2. 平台化开发\n\n   - 兼容主流深度学习框架的算子和自研算子\n   - 支持自定义算子开发\n   - 性能优化：针对不同框架进行内存分配和算子优化\n   - 框架迁移：2022年从TensorFlow迁移到DeepRec，发现性能优化思路具有通用性\n\n这种架构设计确保了推荐系统能够快速响应业务需求，同时保持技术栈的灵活性，为持续优化推荐效果提供了坚实的技术基础。\n\n{% asset_img 推荐架构-1.png 图片来源：data-Fun %}\n{% asset_img 推荐架构-2.png 分层视角的推荐架构 %}\n{% asset_img 微博-推荐架构.png 微博的推荐架构 %}\n\n## 推荐系统架构\n\n## 召回模块\n\n召回模块的目标是从海量候选集中快速筛选出与用户兴趣相关的候选集合，以较低的计算成本获取高召回率。主要特点：\n\n1. 效率优先：处理百万甚至亿级别的候选集，要求算法高效\n2. 广覆盖：确保不遗漏潜在相关内容，追求高召回率\n3. 多样性：通过多路召回策略保证推荐内容的多样性\n4. 实时性：能够快速响应用户最新行为和兴趣变化\n\n工程实现：一般采取多路召回再进行融合\n\n1. 融合用户特征、商品特征和行为特征，通过多种召回通道获取候选集\n2. 使用向量检索等技术在线上进行高效召回\n3. 多路召回结果融合，平衡效率与多样性\n\n{% asset_img 召回-1.png 召回模块示意图 %}\n\n常见召回策略：召回技术可以分为四大类型：传统召回、知识召回、表示召回和匹配召回，实际应用中通常是这些方法的融合。\n\n{% asset_img 召回-2.png 召回技术分类 %}\n\n1. 传统召回\n\n   - 虽然近年来使用减少，但仍占据推荐系统的重要位置\n   - 包括热门召回、协同过滤召回和基于内容的召回\n     - 协同过滤召回：基于用户行为相似性\n     - 内容特征召回：基于内容标签、属性匹配\n     - 热门/时效性召回：基于全局热度和时效性\n   - 代表算法：SVD、Slim系列(gSlim、fSlim)、UserCF、ItemCF、Swing等\n\n2. 知识召回\n\n   - 基于知识图谱构建，具有强可解释性和高性能\n   - 实现方式：通过图谱或规则标签建立\n     - 社交关系召回：基于用户社交网络\n     - 兴趣标签召回：基于用户显性兴趣标签\n  - 应用：基于实体召回、基于标签召回、基于路径推理、基于逻辑表达\n\n3. 表示召回\n   - 向量检索召回（将用户和内容映射到同一向量空间）\n   - 从简单双塔模型发展到基于Graph的复杂模型\n   - 主要分类：\n     - 显式行为建模：\n       - GRE4Rec (Gated Recurrent Units for Recommendation)\n       - DUPN (Deep User Perception Network)\n       - BERT4Rec (Bidirectional Encoder Representations from Transformers for Recommendation)\n     - 隐式行为建模：\n       - XDM (eXtreme Deep Factorization Machine)\n     - 多兴趣表征：\n       - MIND (Multi-Interest Network with Dynamic routing)\n       - SASNet (Self-Attention Sequential Network)\n     - 超长行为建模\n\n4. 匹配召回\n   - 为精准表征行为，对模型复杂度要求更高\n   - 代表算法：\n     - NCF (Neural Collaborative Filtering)\n     - TDM (Tree-based Deep Matching)\n     - DR (Deep Retrieval)\n   - TDM和DR从检索、模型、索引三方面优化召回链路\n   - 需要精准的负样本采样\n\n### 粗排模块\n\n粗排模块的目标是在召回阶段筛选出的候选集上进行更精细的排序，以提高推荐的准确性和效率。\n\n粗排模块通常需要平衡模型复杂度和计算效率，处理数百到数千个候选项，为精排阶段提供更优质的候选集。主要特点：\n\n1. **计算效率与精度平衡**：比召回更精准，比精排更高效\n2. **特征使用**：使用比召回更丰富但比精排更精简的特征集\n3. **模型复杂度**：中等复杂度，通常采用轻量级深度学习模型\n4. **候选集规模**：处理数百到数千个候选项，输出几十到几百个结果\n\n粗排的发展历程：\n\n- **早期**：主要基于人工规则或后验概率统计，简单直接但表达能力有限。\n- **中期**：引入LR、XFTRL、GBDT等简单线性模型，开始有了基础的特征表达能力。\n- **现代**：轻量级深度学习模型（如双塔模型、三塔模型、和FSCD模型）将用户和商品分别进行表征后再进行匹配，大幅提升了表达能力。\n- **最新趋势**：端到端深度粗排、与精排模型协同优化\n  - 如COLD模型、AutoFAS模型等，在特征工程和模型架构上进行深度优化，追求更高性能和精度\n  - **与精排模型的融合**：通过模型蒸馏等技术，使粗排模型能够学习精排模型的能力，保持决策一致性。\n  - **优化目标的一致性**：将粗排的优化目标与整体推荐系统目标对齐，确保粗排决策有利于最终效果。\n  - **工程效率优化**：随着模型复杂度增加，需要更强的工程优化能力来保证实时性。\n\n粗排面临的主要挑战：\n\n1. 如何与召回和精排保持一致性\n2. 如何在有限计算资源下提高模型表达能力\n   1. 特征交叉设计：如何在轻量模型中实现有效的特征交叉\n   2. 性能与精度平衡：在保证推理速度的同时提升模型精度\n   3. 样本选择偏差(SSB)：如何解决由于前序环节筛选导致的数据分布偏差问题\n3. 如何处理样本选择偏差(SSB)问题\n4. 如何设计高效的特征交叉机制\n\n粗排模型的演进与融合：\n\n{% asset_img 粗排.png 粗排模型演进与融合 %}\n\n### 精排\n\n精排模块是推荐系统中最核心的排序环节，负责对粗排筛选后的候选集进行精细化排序，直接决定最终的推荐结果质量。主要特点：\n\n1. **高精度优先**：追求最高的预测准确性，是整个推荐系统的核心决策环节\n2. **特征丰富**：使用最全面的特征集，包括用户特征、物品特征、上下文特征和交叉特征\n3. **模型复杂度高**：采用复杂的深度学习模型，充分挖掘特征间的非线性关系\n4. **候选集规模**：处理几十到几百个候选项，输出最终的推荐结果\n\n精排模块的主要目标：\n\n1. **准确预测用户行为**：精确预测用户对不同物品的点击率、转化率等关键指标\n2. **多目标平衡**：同时优化点击率、转化率、用户体验等多个业务目标\n3. **实时响应**：在有限的延迟要求下完成复杂模型的推理\n4. **可解释性**：提供推荐结果的解释，增强用户信任和系统透明度\n\n精排模型的演进历程：\n\n1. **传统机器学习阶段**\n   - 线性模型：基于LR (Logistic Regression)、MLR (Mixed Logistic Regression)\n   - 树模型：GBDT (Gradient Boosting Decision Tree)、XGBoost\n   - 因子分解：FM (Factorization Machines)、FFM (Field-aware Factorization Machines)\n   - 具体做法：通过样本分组做 MLR、通过特征交叉做 FM，通过 FM 做序列，通过树模型的 GBDT 相关序列，XGBOST 序列，有实时性的、 FTRL、XFTRL等 \n   - 优点：训练和推理效率高，可解释性强\n   - 局限：表达能力有限，难以捕捉复杂特征交互\n2. **深度学习早期阶段**\n   - 基础深度网络：DNN (Deep Neural Network)、Wide & Deep\n   - 特征交互增强：DeepFM、DCN (Deep & Cross Network)、xDeepFM\n   - 优点：增强了特征交互能力，提升了模型表达能力\n   - 局限：对序列和时序信息建模不足\n3. **注意力机制阶段**\n   - 行为序列建模：DIN (Deep Interest Network)、DIEN (Deep Interest Evolution Network)\n   - 多兴趣建模：MIND (Multi-Interest Network)、ComiRec\n   - 优点：能够捕捉用户兴趣动态变化，提升个性化推荐效果\n   - 代表模型：\n     - DIN：通过注意力机制对用户历史行为进行加权，突出与当前候选物品相关的历史行为\n     - DIEN：在DIN基础上引入兴趣进化网络，建模用户兴趣的演变过程\n     - SIM (Search Interest Model)：融合搜索和浏览行为，更全面地理解用户兴趣\n4. **多任务学习阶段**\n   - 共享表示学习：Shared-Bottom、MMoE (Multi-gate Mixture-of-Experts)\n   - 任务关系建模：PLE (Progressive Layered Extraction)、AITM (Adaptive Information Transfer Multi-task)\n   - 优点：能够同时优化多个业务目标，提升整体推荐效果\n   - 代表模型：\n     - MMoE：通过多个专家网络和门控机制，实现任务间的选择性知识共享\n     - PLE：通过分层提取结构，平衡任务间的共享与竞争关系\n5. **预训练与迁移学习阶段**\n   - 大规模预训练：BERT4Rec、P5 (Personalized Prompt Learning for Product Search)\n   - 跨域迁移：STAR (Sparse Transfer Learning for Recommendation)\n   - 优点：能够利用大规模数据和跨域知识，提升推荐效果\n   - 局限：计算资源需求高，工程实现复杂\n\n精排面临的主要挑战：\n\n1. **多目标优化**：如何平衡点击率、转化率、用户体验等多个业务目标\n   - 解决方案：多任务学习、帕累托最优、约束优化等\n\n2. **样本偏差处理**：如何处理曝光选择偏差、位置偏差等数据偏差问题\n   - 解决方案：反事实学习、因果推断、去偏技术等\n\n3. **冷启动问题**：如何处理新用户、新物品的推荐问题\n   - 解决方案：元学习、迁移学习、内容特征增强等\n\n4. **计算效率与实时性**：如何在保证模型复杂度的同时满足实时推理需求\n   - 解决方案：模型压缩、知识蒸馏、分布式计算等\n\n5. **可解释性与透明度**：如何提供推荐结果的解释，增强用户信任\n   - 解决方案：注意力可视化、特征重要性分析、本地解释模型等\n\n{% asset_img 精排.png 精排模型演进与融合 %}\n\n该技术演进图可以从四个部分来分析：\n\n   - 下部分：主要基于多层感知机(MLP)到Wide & Deep的演进路线，包括Deep & Cross Network(DCN)、DeepFM、Attentional Factorization Machine(AFM)、Neural Factorization Machine(NFM)等模型，这些模型都是针对特定部分进行优化\n   - 上部分：主要是对多层感知机(MLP)架构的增强，引入了注意力(Attention)机制、Product Layer以及图神经网络(GNN)等先进技术\n   - 右侧部分：主要基于自编码器(AE)、强化学习或神经协同过滤(NCF)的改进和变体\n   - 左侧部分：主要是基于注意力机制演化而来，包括Deep Interest Network(DIN)、Deep Interest Evolution Network(DIEN)、Multi-channel Interest Merge Network(MIMN)、Deep Session Interest Network(DSIN)和Search Interest Model(SIM)等模型，主要解决长序列建模问题\n\n精排技术的发展趋势主要朝着四个方向发展：多模块、多任务、多目标和多模态。其中：\n\n   - 多任务方向：代表模型有Multi-gate Mixture-of-Experts(MMoE)和Progressive Layered Extraction(PLE)等\n   - 多目标方向：代表技术有帕累托最优等\n   - 多模态方向：代表模型有Multi-Modal Graph Convolution Network(MMGCN)、LOGO等\n\n这些发展趋势体现在三个核心方面：、\n\n   1. 模型目标：从单一目标向多目标优化转变\n   2. 模型表达：采用更成熟复杂的结构增强表达能力\n   3. 模型容量：通过引入更多特征处理和外部信息扩充模型容量\n\n### 重排/混排\n\n重排（Reranking）是推荐系统流程中的最后一个环节，主要负责对精排输出的候选集进行最终调整和优化，以提升整体推荐效果。与精排不同，重排阶段可以：\n\n1. **全局优化**：考虑候选集整体的多样性、新颖性和覆盖度\n   - 解决方案：基于贪心算法、整数规划、强化学习等方法\n2. **考虑上下文**：将用户当前状态、历史交互和页面展示效果纳入考量\n    - 解决方案：序列模型、注意力机制、图神经网络等\n3. **实时反馈**：能够利用用户最新的交互信号进行实时调整\n   - 解决方案：在线学习、增量更新、边缘计算等\n\n重排的主要技术方法包括：\n\n1. **基于规则的重排**\n   - 多样性规则：控制同类内容比例、打散相似内容\n   - 约束规则：业务规则、合规要求、运营干预等\n   - 优点：可解释性强，易于实现和调整\n   - 局限：难以捕捉复杂模式，规则维护成本高\n2. **基于模型的重排**\n   - 全局排序模型：DLCM (Deep Listwise Context Model)、PRM (Personalized Re-ranking Model)\n   - 序列感知模型：SetRank、IRGPR (Intent-aware Re-ranking with Graph Neural Networks)\n   - 优点：能够学习复杂的全局依赖关系，提升整体推荐质量\n   - 局限：计算复杂度高，实时性要求高\n3. **基于强化学习的重排**\n   - 策略梯度方法：REINFORCE、Actor-Critic\n   - 值函数方法：DQN、Double DQN\n   - 优点：能够直接优化长期收益，处理延迟反馈\n   - 局限：训练不稳定，样本效率低\n4. **边缘计算重排**\n   - 轻量级模型：EdgeRec（阿里开源）、MobileRec\n   - 模型压缩：量化、剪枝、知识蒸馏\n   - 优点：低延迟，能够利用端侧实时信息\n   - 局限：模型能力受限，依赖端侧计算资源\n\n重排面临的主要挑战：\n\n1. **实时性与复杂性平衡**：如何在毫秒级响应时间内完成复杂的全局优化\n   - 解决方案：模型压缩、计算优化、分布式处理\n2. **评估指标多元化**：如何平衡点击率、多样性、用户满意度等多维度指标\n   - 解决方案：多目标优化、加权评分、A/B测试\n3. **冷启动与探索**：如何在重排阶段引入探索机制，避免推荐系统固化\n   - 解决方案：Thompson采样、上下文赌臂算法、探索-利用平衡\n4. **个性化与公平性**：如何在满足个性化的同时保证算法公平性和内容多样性\n   - 解决方案：公平性约束、多样性指标、伦理审计\n\n例如，序列重排：\n\n{% asset_img 重排.png 重排模型演进与融合 %}\n\n### 数据层\n\n数据层是推荐系统的基础，负责数据的收集、处理和存储，为上层算法提供高质量的数据支持。一个完善的数据层架构通常包括以下几个关键组件：\n\n1. **数据采集系统**\n   - 埋点设计、采集方案和数据流设计 \n   - **用户行为数据**：点击、浏览、停留时间、收藏、分享、评论等\n   - **内容特征数据**：文本、图像、视频、音频的结构化和非结构化特征\n   - **上下文数据**：时间、地点、设备、网络环境等\n   - **业务数据**：交易、支付、退款、客服互动等\n\n2. **数据处理框架**\n   - **实时处理**：Kafka、Flink、Spark Streaming等\n   - **离线处理**：Hadoop、Spark、Hive等\n   - **特征存储**：Redis、HBase、Cassandra、特征存储系统(如阿里的FeatureStore)\n\n3. **特征工程系统**\n   - **特征提取**：从原始数据中提取有价值的信号\n   - **特征变换**：归一化、标准化、离散化、编码等\n   - **特征选择**：过滤、包装、嵌入式方法等\n   - **特征组合**：交叉特征、多域特征融合等\n\n4. **用户理解系统**\n   - **数据层**：构建全面的用户画像基础\n     - 全面收集用户基础信息、行为信息、时空信息及设备信息\n     - 依赖成熟的实时数据采集框架支持\n     - 确保数据的全面性、实时性和准确性\n   - **洞察层**：深度分析用户特征\n     - 用户价值洞察：消费能力、活跃度、忠诚度等\n     - 行为模式洞察：浏览习惯、购买周期、兴趣变化等\n     - 生命周期洞察：新用户、成长期、成熟期、流失风险等\n     - 标签体系建设：需求强度标签、价格敏感度标签、行为序列模式标签等\n   - **理解层**：用户偏好与意图解析\n     - 显式理解：\n       - 用户行为筛选与分析（物料、类目偏好等）\n       - 兴趣标签抽取与权重计算\n       - 用户群体聚类与相似用户发现（Lookalike模型）\n       - 高层意图推断（购买力、品牌偏好、决策周期等）\n       - 用户生命周期全链路理解（从浏览到购买决策的完整路径）\n     - 隐式理解/表达：\n       - 多维度用户行为向量化表达\n       - 多模态行为序列建模（短期、长期、超长期）\n       - 行为序列的隐式语义挖掘\n       - 生命周期的连续性表达\n   - **可解释性建设**：\n     - 基于相似用户和商品的推荐解释机制\n     - 基于文本和视觉内容的推荐理由生成\n     - 通过社交关系网络增强推荐可信度\n\n{% asset_img 数据层.png 数据层 %}\n\n数据层的核心挑战包括：\n\n1. **数据质量保障**\n   - 完整性：确保数据无缺失、无重复\n   - 准确性：确保数据真实反映用户行为和内容特征\n   - 时效性：确保数据能够及时更新和处理\n2. **数据规模处理**\n   - 海量数据存储：PB级数据的高效存储和检索\n   - 高并发处理：每秒百万级请求的实时处理\n   - 低延迟访问：毫秒级的特征获取和计算\n3. **数据隐私保护**\n   - 数据脱敏：敏感信息的加密和匿名化\n   - 访问控制：严格的数据访问权限管理\n   - 合规处理：符合GDPR、CCPA等隐私法规\n\n在实际应用中，大型推荐系统通常采用Lambda架构或Kappa架构，结合批处理和流处理能力，以满足不同场景下的数据处理需求。\n\n### 推荐系统的评估\n\n推荐系统的评估是确保系统有效性和持续优化的关键环节，主要分为线上业务指标和离线模型指标两大类：\n\n线上/业务指标\n\n线上指标直接反映推荐系统对业务的实际影响，是最终评判系统价值的关键：\n\n1. **转化率指标**\n   - 点击率(CTR)：用户点击推荐内容的比例\n   - 购买转化率(CVR)：从推荐到最终购买的转化比例\n   - 下单率(Order Rate)：用户通过推荐系统产生订单的比例\n   - 留存率(Retention Rate)：推荐系统对用户留存的提升效果\n2. **推荐质量指标**\n   - 覆盖率(Coverage)：推荐系统能够推荐的物品占总物品的比例\n   - 多样性(Diversity)：推荐结果的类别丰富程度\n   - 新颖性(Novelty)：推荐结果中新内容的比例\n   - 相关性(Relevance)：推荐内容与用户兴趣的匹配度\n   - 时效性(Timeliness)：推荐内容的实时更新能力\n3. **用户满意度指标**\n   - 用户反馈评分：用户对推荐内容的直接评价\n   - 停留时长：用户在推荐内容上的停留时间\n   - 互动深度：评论、分享、收藏等深度互动行为\n   - NPS(净推荐值)：用户推荐意愿的综合评分\n   - 用户投诉率：对推荐内容不满的反馈比例\n\n离线/模型链路指标\n\n离线指标主要用于算法迭代和模型优化，按推荐系统的不同阶段有不同的评估重点：\n\n1. **召回阶段指标**\n   - Recall(召回率)：正确召回的相关物品占所有相关物品的比例\n   - Precision(精确率)：正确召回的物品占所有召回物品的比例\n   - F1 Score：Recall和Precision的调和平均\n   - Hit Rate：至少一次命中的比例\n   - NS-recall/NS-precision：考虑负采样的召回/精确率\n   - KL散度：评估推荐分布与真实分布的差异\n   - 长尾覆盖率：对非热门内容的推荐能力\n2. **粗排阶段指标**\n   - AUC(曲线下面积)：模型区分正负样本的能力\n   - GAUC(分组AUC)：考虑用户分组的AUC加权\n   - MAP(平均精度均值)：考虑排序位置的精确率\n   - **与精排一致性**：粗排结果与精排打分的相关性\n   - 计算效率：处理速度和资源消耗\n3. **精排和重排阶段指标**\n   - 场景化AUC/GAUC：不同场景下的区分能力\n   - 分类目/人群AUC：针对不同类目和用户群体的表现\n   - NDCG(归一化折损累计增益)：考虑位置权重的排序质量\n   - MRR(平均倒数排名)：相关项排名的倒数平均\n   - 商业目标达成度：GMV、收入等业务指标的提升\n   - 公平性指标：不同用户群体获得推荐质量的均衡性\n\n评估体系的构建原则\n\n1. **多维度评估**：单一指标无法全面反映系统质量，需要构建多维度的评估体系\n2. **线上线下结合**：离线指标提供快速迭代基础，线上指标验证实际业务价值\n3. **短期长期平衡**：兼顾即时转化与用户长期价值\n4. **A/B测试验证**：通过对照实验验证模型迭代的实际效果\n5. **持续监控与优化**：建立实时监控机制，及时发现并解决问题\n\n推荐系统的评估是一个动态过程，需要根据业务发展阶段和用户需求变化不断调整评估指标和权重，确保系统持续为用户和平台创造价值。\n\n{% asset_img 推荐系统-指标.png 推荐系统指标 %}\n\n## 参考\n\n- [DataFunTalk：推荐系统综述](https://www.datafuntalk.com/p/t_pc/course_pc_detail/image_text/i_64365c0ae4b0cf39e6ba78bc)","source":"_posts/推荐系统101-1-推荐系统介绍.md","raw":"---\nlayout: post\ntitle: 推荐系统101(1)推荐系统介绍\ndate: 2023-12-13 12:00:00\npermalink: /recsys/101-intro/\ncategories:\n  - 技术\ntags:\n  - 搜广推\n  - 人工智能和机器学习\n---\n\n- [现代推荐系统](#现代推荐系统)\n- [推荐系统架构](#推荐系统架构)\n- [召回模块](#召回模块)\n  - [粗排模块](#粗排模块)\n  - [精排](#精排)\n  - [重排/混排](#重排混排)\n  - [数据层](#数据层)\n  - [推荐系统的评估](#推荐系统的评估)\n- [参考](#参考)\n\n### 推荐系统的发展历史\n\n[推荐系统](https://en.wikipedia.org/wiki/Recommender_system)是一种信息过滤系统，用于预测用户对物品的\"评分\"或\"偏好\"\n\n一个常见的推荐系统架构：\n\n\n- 目标：匹配用户和信息\n- 召回：猜用户可能喜欢什么内容\n- 排序服务: 确定用户最喜欢什么\n- 重排序（Reranking） 服务：不要出现同样分类、重复密集等 \n- 应用场景：Feed流 信息流\n\n{% mermaid %}\nflowchart LR\n    subgraph \"推荐技术框架\"\n        direction LR\n        A1[\"理点\"] --> B1[\"用户特征\"]\n        A2[\"用户信息\"] --> B1\n        A3[\"信息格式化\"] --> B2[\"信息特征\"]\n        \n        B1 --> C[\"召回服务\"]\n        B2 --> C\n        \n        C --> D[\"排序服务\"]\n        D --> E[\"重排序服务\"]\n        E --> F[\"应用场景\"]\n    end\n{% endmermaid %}\n\n推荐系统发展历史：\n\n1. 早期阶段（1990年代初）：推荐系统起源于图书馆学科，基于过滤和关键词匹配。代表性产品/服务：早期的图书馆检索系统、学术论文推荐系统。\n2. 协同过滤时期（1990年代末至2000年代初）：引入协同过滤算法，通过分析用户行为，找到相似用户或物品进行推荐。代表性产品/服务：亚马逊的商品推荐、Netflix的电影推荐、Last.fm的音乐推荐。\n3. 内容过滤时期（2000年代中期）：基于内容特征和用户偏好进行推荐，利用物品的元数据和用户画像进行匹配。代表性产品/服务：Google News的新闻推荐、Pandora的音乐推荐、StumbleUpon的网页推荐。\n4. 混合推荐时期（2000年代后期至今）：将协同过滤、内容过滤等不同算法进行组合，提供更准确和多样化的推荐结果。代表性产品/服务：淘宝的商品推荐、Spotify的音乐推荐、LinkedIn的职业推荐。\n5. 个性化推荐时期（2010年代初）：以今日头条为代表，通过机器学习算法实现千人千面的个性化推荐。张一鸣团队开发的推荐算法成为行业标杆，推动了推荐系统的普及和应用。\n6. 深度学习时期（2010年代中期至今）：利用深度学习技术提取更丰富的特征，结合用户行为序列、上下文信息等，进一步提高推荐的准确性。代表性产品/服务：YouTube的视频推荐、TikTok的短视频推荐、Instagram的内容推荐。\n7. 云服务化时期（2020年代至今）：推荐算法在各大厂已经变成标准化的云服务，通过API接口提供给开发者使用。代表性服务：AWS Personalize、Google Recommendations AI、Azure Personalizer。这些服务封装了常用的推荐算法，如协同过滤、内容过滤和混合推荐，同时注重用户隐私保护，仅使用必要的行为数据进行推荐。\n\n### 协同过滤算法\n\n协同过滤算法是推荐系统中的一种基本算法，它基于用户行为数据来推荐物品，对现代推荐系统发展有着深远影响。协同过滤奠定了基于用户行为数据进行推荐的基础思想，为后续的矩阵分解、因子分解机(FFM)、深度学习推荐模型等提供了理论基础。它引入的用户-物品交互矩阵成为推荐系统数据组织的标准方式，而其解决稀疏性和冷启动问题的思路也启发了混合推荐、多模态推荐等新方法。现代推荐系统如YouTube的深度神经网络推荐和TikTok的多目标优化推荐，都能看到协同过滤的影子。\n\n现在大厂提供的标准化推荐服务（例如火山引擎），大多都是基于协同过滤算法。\n\n协同过滤算法主要分为以下三种：\n\n1. **基于内容的推荐**：如果用户浏览或购买过某种类型的内容，则给用户推荐这种类型下的其它内容。例如，向用户推荐某位主演的其他电影，这种是基于内容的推荐。\n2. **基于用户的协同过滤**：基于\"跟用户喜好相似的人喜欢的东西，用户也很有可能喜欢\"的原理。通过分析用户之间的相似性，找到相似用户群体，然后推荐相似用户喜欢但目标用户尚未接触的物品。例如，\"购买了该商品的用户还购买了什么商品\"这类推荐。\n3. **基于物品的协同过滤**：基于\"与用户喜欢的物品相似的物品，用户也可能喜欢\"的原理。通过分析物品之间的相似关系，向用户推荐与其已经喜欢的物品相似的其他物品。例如，用户购买了某个商品后，系统会推荐与该商品经常一起购买的相关商品。\n\n## 现代推荐系统\n\n现代推荐系统的主要流程采用**数据流优先的设计原则**，具有高度灵活性。\n\n其核心流程为：\n\n1. 收集用户行为数据\n2. 拼接训练样本\n3. 模型训练\n4. 生成推荐\n5. 用户反馈\n6. 模型更新\n\n这种设计实现了端到端的实时更新能力，具体特点包括：\n\n1. 模型训练与部署\n\n   - 支持多种训练框架：LR（逻辑回归）、FM（因子分解机）、TensorFlow、DeepRec等\n   - 自研模型存储系统：统一的数据流架构和模型格式\n   - 快速更新：模型训练到线上更新可在分钟级完成\n   - 多Backend支持：可灵活切换不同计算后端\n\n2. 平台化开发\n\n   - 兼容主流深度学习框架的算子和自研算子\n   - 支持自定义算子开发\n   - 性能优化：针对不同框架进行内存分配和算子优化\n   - 框架迁移：2022年从TensorFlow迁移到DeepRec，发现性能优化思路具有通用性\n\n这种架构设计确保了推荐系统能够快速响应业务需求，同时保持技术栈的灵活性，为持续优化推荐效果提供了坚实的技术基础。\n\n{% asset_img 推荐架构-1.png 图片来源：data-Fun %}\n{% asset_img 推荐架构-2.png 分层视角的推荐架构 %}\n{% asset_img 微博-推荐架构.png 微博的推荐架构 %}\n\n## 推荐系统架构\n\n## 召回模块\n\n召回模块的目标是从海量候选集中快速筛选出与用户兴趣相关的候选集合，以较低的计算成本获取高召回率。主要特点：\n\n1. 效率优先：处理百万甚至亿级别的候选集，要求算法高效\n2. 广覆盖：确保不遗漏潜在相关内容，追求高召回率\n3. 多样性：通过多路召回策略保证推荐内容的多样性\n4. 实时性：能够快速响应用户最新行为和兴趣变化\n\n工程实现：一般采取多路召回再进行融合\n\n1. 融合用户特征、商品特征和行为特征，通过多种召回通道获取候选集\n2. 使用向量检索等技术在线上进行高效召回\n3. 多路召回结果融合，平衡效率与多样性\n\n{% asset_img 召回-1.png 召回模块示意图 %}\n\n常见召回策略：召回技术可以分为四大类型：传统召回、知识召回、表示召回和匹配召回，实际应用中通常是这些方法的融合。\n\n{% asset_img 召回-2.png 召回技术分类 %}\n\n1. 传统召回\n\n   - 虽然近年来使用减少，但仍占据推荐系统的重要位置\n   - 包括热门召回、协同过滤召回和基于内容的召回\n     - 协同过滤召回：基于用户行为相似性\n     - 内容特征召回：基于内容标签、属性匹配\n     - 热门/时效性召回：基于全局热度和时效性\n   - 代表算法：SVD、Slim系列(gSlim、fSlim)、UserCF、ItemCF、Swing等\n\n2. 知识召回\n\n   - 基于知识图谱构建，具有强可解释性和高性能\n   - 实现方式：通过图谱或规则标签建立\n     - 社交关系召回：基于用户社交网络\n     - 兴趣标签召回：基于用户显性兴趣标签\n  - 应用：基于实体召回、基于标签召回、基于路径推理、基于逻辑表达\n\n3. 表示召回\n   - 向量检索召回（将用户和内容映射到同一向量空间）\n   - 从简单双塔模型发展到基于Graph的复杂模型\n   - 主要分类：\n     - 显式行为建模：\n       - GRE4Rec (Gated Recurrent Units for Recommendation)\n       - DUPN (Deep User Perception Network)\n       - BERT4Rec (Bidirectional Encoder Representations from Transformers for Recommendation)\n     - 隐式行为建模：\n       - XDM (eXtreme Deep Factorization Machine)\n     - 多兴趣表征：\n       - MIND (Multi-Interest Network with Dynamic routing)\n       - SASNet (Self-Attention Sequential Network)\n     - 超长行为建模\n\n4. 匹配召回\n   - 为精准表征行为，对模型复杂度要求更高\n   - 代表算法：\n     - NCF (Neural Collaborative Filtering)\n     - TDM (Tree-based Deep Matching)\n     - DR (Deep Retrieval)\n   - TDM和DR从检索、模型、索引三方面优化召回链路\n   - 需要精准的负样本采样\n\n### 粗排模块\n\n粗排模块的目标是在召回阶段筛选出的候选集上进行更精细的排序，以提高推荐的准确性和效率。\n\n粗排模块通常需要平衡模型复杂度和计算效率，处理数百到数千个候选项，为精排阶段提供更优质的候选集。主要特点：\n\n1. **计算效率与精度平衡**：比召回更精准，比精排更高效\n2. **特征使用**：使用比召回更丰富但比精排更精简的特征集\n3. **模型复杂度**：中等复杂度，通常采用轻量级深度学习模型\n4. **候选集规模**：处理数百到数千个候选项，输出几十到几百个结果\n\n粗排的发展历程：\n\n- **早期**：主要基于人工规则或后验概率统计，简单直接但表达能力有限。\n- **中期**：引入LR、XFTRL、GBDT等简单线性模型，开始有了基础的特征表达能力。\n- **现代**：轻量级深度学习模型（如双塔模型、三塔模型、和FSCD模型）将用户和商品分别进行表征后再进行匹配，大幅提升了表达能力。\n- **最新趋势**：端到端深度粗排、与精排模型协同优化\n  - 如COLD模型、AutoFAS模型等，在特征工程和模型架构上进行深度优化，追求更高性能和精度\n  - **与精排模型的融合**：通过模型蒸馏等技术，使粗排模型能够学习精排模型的能力，保持决策一致性。\n  - **优化目标的一致性**：将粗排的优化目标与整体推荐系统目标对齐，确保粗排决策有利于最终效果。\n  - **工程效率优化**：随着模型复杂度增加，需要更强的工程优化能力来保证实时性。\n\n粗排面临的主要挑战：\n\n1. 如何与召回和精排保持一致性\n2. 如何在有限计算资源下提高模型表达能力\n   1. 特征交叉设计：如何在轻量模型中实现有效的特征交叉\n   2. 性能与精度平衡：在保证推理速度的同时提升模型精度\n   3. 样本选择偏差(SSB)：如何解决由于前序环节筛选导致的数据分布偏差问题\n3. 如何处理样本选择偏差(SSB)问题\n4. 如何设计高效的特征交叉机制\n\n粗排模型的演进与融合：\n\n{% asset_img 粗排.png 粗排模型演进与融合 %}\n\n### 精排\n\n精排模块是推荐系统中最核心的排序环节，负责对粗排筛选后的候选集进行精细化排序，直接决定最终的推荐结果质量。主要特点：\n\n1. **高精度优先**：追求最高的预测准确性，是整个推荐系统的核心决策环节\n2. **特征丰富**：使用最全面的特征集，包括用户特征、物品特征、上下文特征和交叉特征\n3. **模型复杂度高**：采用复杂的深度学习模型，充分挖掘特征间的非线性关系\n4. **候选集规模**：处理几十到几百个候选项，输出最终的推荐结果\n\n精排模块的主要目标：\n\n1. **准确预测用户行为**：精确预测用户对不同物品的点击率、转化率等关键指标\n2. **多目标平衡**：同时优化点击率、转化率、用户体验等多个业务目标\n3. **实时响应**：在有限的延迟要求下完成复杂模型的推理\n4. **可解释性**：提供推荐结果的解释，增强用户信任和系统透明度\n\n精排模型的演进历程：\n\n1. **传统机器学习阶段**\n   - 线性模型：基于LR (Logistic Regression)、MLR (Mixed Logistic Regression)\n   - 树模型：GBDT (Gradient Boosting Decision Tree)、XGBoost\n   - 因子分解：FM (Factorization Machines)、FFM (Field-aware Factorization Machines)\n   - 具体做法：通过样本分组做 MLR、通过特征交叉做 FM，通过 FM 做序列，通过树模型的 GBDT 相关序列，XGBOST 序列，有实时性的、 FTRL、XFTRL等 \n   - 优点：训练和推理效率高，可解释性强\n   - 局限：表达能力有限，难以捕捉复杂特征交互\n2. **深度学习早期阶段**\n   - 基础深度网络：DNN (Deep Neural Network)、Wide & Deep\n   - 特征交互增强：DeepFM、DCN (Deep & Cross Network)、xDeepFM\n   - 优点：增强了特征交互能力，提升了模型表达能力\n   - 局限：对序列和时序信息建模不足\n3. **注意力机制阶段**\n   - 行为序列建模：DIN (Deep Interest Network)、DIEN (Deep Interest Evolution Network)\n   - 多兴趣建模：MIND (Multi-Interest Network)、ComiRec\n   - 优点：能够捕捉用户兴趣动态变化，提升个性化推荐效果\n   - 代表模型：\n     - DIN：通过注意力机制对用户历史行为进行加权，突出与当前候选物品相关的历史行为\n     - DIEN：在DIN基础上引入兴趣进化网络，建模用户兴趣的演变过程\n     - SIM (Search Interest Model)：融合搜索和浏览行为，更全面地理解用户兴趣\n4. **多任务学习阶段**\n   - 共享表示学习：Shared-Bottom、MMoE (Multi-gate Mixture-of-Experts)\n   - 任务关系建模：PLE (Progressive Layered Extraction)、AITM (Adaptive Information Transfer Multi-task)\n   - 优点：能够同时优化多个业务目标，提升整体推荐效果\n   - 代表模型：\n     - MMoE：通过多个专家网络和门控机制，实现任务间的选择性知识共享\n     - PLE：通过分层提取结构，平衡任务间的共享与竞争关系\n5. **预训练与迁移学习阶段**\n   - 大规模预训练：BERT4Rec、P5 (Personalized Prompt Learning for Product Search)\n   - 跨域迁移：STAR (Sparse Transfer Learning for Recommendation)\n   - 优点：能够利用大规模数据和跨域知识，提升推荐效果\n   - 局限：计算资源需求高，工程实现复杂\n\n精排面临的主要挑战：\n\n1. **多目标优化**：如何平衡点击率、转化率、用户体验等多个业务目标\n   - 解决方案：多任务学习、帕累托最优、约束优化等\n\n2. **样本偏差处理**：如何处理曝光选择偏差、位置偏差等数据偏差问题\n   - 解决方案：反事实学习、因果推断、去偏技术等\n\n3. **冷启动问题**：如何处理新用户、新物品的推荐问题\n   - 解决方案：元学习、迁移学习、内容特征增强等\n\n4. **计算效率与实时性**：如何在保证模型复杂度的同时满足实时推理需求\n   - 解决方案：模型压缩、知识蒸馏、分布式计算等\n\n5. **可解释性与透明度**：如何提供推荐结果的解释，增强用户信任\n   - 解决方案：注意力可视化、特征重要性分析、本地解释模型等\n\n{% asset_img 精排.png 精排模型演进与融合 %}\n\n该技术演进图可以从四个部分来分析：\n\n   - 下部分：主要基于多层感知机(MLP)到Wide & Deep的演进路线，包括Deep & Cross Network(DCN)、DeepFM、Attentional Factorization Machine(AFM)、Neural Factorization Machine(NFM)等模型，这些模型都是针对特定部分进行优化\n   - 上部分：主要是对多层感知机(MLP)架构的增强，引入了注意力(Attention)机制、Product Layer以及图神经网络(GNN)等先进技术\n   - 右侧部分：主要基于自编码器(AE)、强化学习或神经协同过滤(NCF)的改进和变体\n   - 左侧部分：主要是基于注意力机制演化而来，包括Deep Interest Network(DIN)、Deep Interest Evolution Network(DIEN)、Multi-channel Interest Merge Network(MIMN)、Deep Session Interest Network(DSIN)和Search Interest Model(SIM)等模型，主要解决长序列建模问题\n\n精排技术的发展趋势主要朝着四个方向发展：多模块、多任务、多目标和多模态。其中：\n\n   - 多任务方向：代表模型有Multi-gate Mixture-of-Experts(MMoE)和Progressive Layered Extraction(PLE)等\n   - 多目标方向：代表技术有帕累托最优等\n   - 多模态方向：代表模型有Multi-Modal Graph Convolution Network(MMGCN)、LOGO等\n\n这些发展趋势体现在三个核心方面：、\n\n   1. 模型目标：从单一目标向多目标优化转变\n   2. 模型表达：采用更成熟复杂的结构增强表达能力\n   3. 模型容量：通过引入更多特征处理和外部信息扩充模型容量\n\n### 重排/混排\n\n重排（Reranking）是推荐系统流程中的最后一个环节，主要负责对精排输出的候选集进行最终调整和优化，以提升整体推荐效果。与精排不同，重排阶段可以：\n\n1. **全局优化**：考虑候选集整体的多样性、新颖性和覆盖度\n   - 解决方案：基于贪心算法、整数规划、强化学习等方法\n2. **考虑上下文**：将用户当前状态、历史交互和页面展示效果纳入考量\n    - 解决方案：序列模型、注意力机制、图神经网络等\n3. **实时反馈**：能够利用用户最新的交互信号进行实时调整\n   - 解决方案：在线学习、增量更新、边缘计算等\n\n重排的主要技术方法包括：\n\n1. **基于规则的重排**\n   - 多样性规则：控制同类内容比例、打散相似内容\n   - 约束规则：业务规则、合规要求、运营干预等\n   - 优点：可解释性强，易于实现和调整\n   - 局限：难以捕捉复杂模式，规则维护成本高\n2. **基于模型的重排**\n   - 全局排序模型：DLCM (Deep Listwise Context Model)、PRM (Personalized Re-ranking Model)\n   - 序列感知模型：SetRank、IRGPR (Intent-aware Re-ranking with Graph Neural Networks)\n   - 优点：能够学习复杂的全局依赖关系，提升整体推荐质量\n   - 局限：计算复杂度高，实时性要求高\n3. **基于强化学习的重排**\n   - 策略梯度方法：REINFORCE、Actor-Critic\n   - 值函数方法：DQN、Double DQN\n   - 优点：能够直接优化长期收益，处理延迟反馈\n   - 局限：训练不稳定，样本效率低\n4. **边缘计算重排**\n   - 轻量级模型：EdgeRec（阿里开源）、MobileRec\n   - 模型压缩：量化、剪枝、知识蒸馏\n   - 优点：低延迟，能够利用端侧实时信息\n   - 局限：模型能力受限，依赖端侧计算资源\n\n重排面临的主要挑战：\n\n1. **实时性与复杂性平衡**：如何在毫秒级响应时间内完成复杂的全局优化\n   - 解决方案：模型压缩、计算优化、分布式处理\n2. **评估指标多元化**：如何平衡点击率、多样性、用户满意度等多维度指标\n   - 解决方案：多目标优化、加权评分、A/B测试\n3. **冷启动与探索**：如何在重排阶段引入探索机制，避免推荐系统固化\n   - 解决方案：Thompson采样、上下文赌臂算法、探索-利用平衡\n4. **个性化与公平性**：如何在满足个性化的同时保证算法公平性和内容多样性\n   - 解决方案：公平性约束、多样性指标、伦理审计\n\n例如，序列重排：\n\n{% asset_img 重排.png 重排模型演进与融合 %}\n\n### 数据层\n\n数据层是推荐系统的基础，负责数据的收集、处理和存储，为上层算法提供高质量的数据支持。一个完善的数据层架构通常包括以下几个关键组件：\n\n1. **数据采集系统**\n   - 埋点设计、采集方案和数据流设计 \n   - **用户行为数据**：点击、浏览、停留时间、收藏、分享、评论等\n   - **内容特征数据**：文本、图像、视频、音频的结构化和非结构化特征\n   - **上下文数据**：时间、地点、设备、网络环境等\n   - **业务数据**：交易、支付、退款、客服互动等\n\n2. **数据处理框架**\n   - **实时处理**：Kafka、Flink、Spark Streaming等\n   - **离线处理**：Hadoop、Spark、Hive等\n   - **特征存储**：Redis、HBase、Cassandra、特征存储系统(如阿里的FeatureStore)\n\n3. **特征工程系统**\n   - **特征提取**：从原始数据中提取有价值的信号\n   - **特征变换**：归一化、标准化、离散化、编码等\n   - **特征选择**：过滤、包装、嵌入式方法等\n   - **特征组合**：交叉特征、多域特征融合等\n\n4. **用户理解系统**\n   - **数据层**：构建全面的用户画像基础\n     - 全面收集用户基础信息、行为信息、时空信息及设备信息\n     - 依赖成熟的实时数据采集框架支持\n     - 确保数据的全面性、实时性和准确性\n   - **洞察层**：深度分析用户特征\n     - 用户价值洞察：消费能力、活跃度、忠诚度等\n     - 行为模式洞察：浏览习惯、购买周期、兴趣变化等\n     - 生命周期洞察：新用户、成长期、成熟期、流失风险等\n     - 标签体系建设：需求强度标签、价格敏感度标签、行为序列模式标签等\n   - **理解层**：用户偏好与意图解析\n     - 显式理解：\n       - 用户行为筛选与分析（物料、类目偏好等）\n       - 兴趣标签抽取与权重计算\n       - 用户群体聚类与相似用户发现（Lookalike模型）\n       - 高层意图推断（购买力、品牌偏好、决策周期等）\n       - 用户生命周期全链路理解（从浏览到购买决策的完整路径）\n     - 隐式理解/表达：\n       - 多维度用户行为向量化表达\n       - 多模态行为序列建模（短期、长期、超长期）\n       - 行为序列的隐式语义挖掘\n       - 生命周期的连续性表达\n   - **可解释性建设**：\n     - 基于相似用户和商品的推荐解释机制\n     - 基于文本和视觉内容的推荐理由生成\n     - 通过社交关系网络增强推荐可信度\n\n{% asset_img 数据层.png 数据层 %}\n\n数据层的核心挑战包括：\n\n1. **数据质量保障**\n   - 完整性：确保数据无缺失、无重复\n   - 准确性：确保数据真实反映用户行为和内容特征\n   - 时效性：确保数据能够及时更新和处理\n2. **数据规模处理**\n   - 海量数据存储：PB级数据的高效存储和检索\n   - 高并发处理：每秒百万级请求的实时处理\n   - 低延迟访问：毫秒级的特征获取和计算\n3. **数据隐私保护**\n   - 数据脱敏：敏感信息的加密和匿名化\n   - 访问控制：严格的数据访问权限管理\n   - 合规处理：符合GDPR、CCPA等隐私法规\n\n在实际应用中，大型推荐系统通常采用Lambda架构或Kappa架构，结合批处理和流处理能力，以满足不同场景下的数据处理需求。\n\n### 推荐系统的评估\n\n推荐系统的评估是确保系统有效性和持续优化的关键环节，主要分为线上业务指标和离线模型指标两大类：\n\n线上/业务指标\n\n线上指标直接反映推荐系统对业务的实际影响，是最终评判系统价值的关键：\n\n1. **转化率指标**\n   - 点击率(CTR)：用户点击推荐内容的比例\n   - 购买转化率(CVR)：从推荐到最终购买的转化比例\n   - 下单率(Order Rate)：用户通过推荐系统产生订单的比例\n   - 留存率(Retention Rate)：推荐系统对用户留存的提升效果\n2. **推荐质量指标**\n   - 覆盖率(Coverage)：推荐系统能够推荐的物品占总物品的比例\n   - 多样性(Diversity)：推荐结果的类别丰富程度\n   - 新颖性(Novelty)：推荐结果中新内容的比例\n   - 相关性(Relevance)：推荐内容与用户兴趣的匹配度\n   - 时效性(Timeliness)：推荐内容的实时更新能力\n3. **用户满意度指标**\n   - 用户反馈评分：用户对推荐内容的直接评价\n   - 停留时长：用户在推荐内容上的停留时间\n   - 互动深度：评论、分享、收藏等深度互动行为\n   - NPS(净推荐值)：用户推荐意愿的综合评分\n   - 用户投诉率：对推荐内容不满的反馈比例\n\n离线/模型链路指标\n\n离线指标主要用于算法迭代和模型优化，按推荐系统的不同阶段有不同的评估重点：\n\n1. **召回阶段指标**\n   - Recall(召回率)：正确召回的相关物品占所有相关物品的比例\n   - Precision(精确率)：正确召回的物品占所有召回物品的比例\n   - F1 Score：Recall和Precision的调和平均\n   - Hit Rate：至少一次命中的比例\n   - NS-recall/NS-precision：考虑负采样的召回/精确率\n   - KL散度：评估推荐分布与真实分布的差异\n   - 长尾覆盖率：对非热门内容的推荐能力\n2. **粗排阶段指标**\n   - AUC(曲线下面积)：模型区分正负样本的能力\n   - GAUC(分组AUC)：考虑用户分组的AUC加权\n   - MAP(平均精度均值)：考虑排序位置的精确率\n   - **与精排一致性**：粗排结果与精排打分的相关性\n   - 计算效率：处理速度和资源消耗\n3. **精排和重排阶段指标**\n   - 场景化AUC/GAUC：不同场景下的区分能力\n   - 分类目/人群AUC：针对不同类目和用户群体的表现\n   - NDCG(归一化折损累计增益)：考虑位置权重的排序质量\n   - MRR(平均倒数排名)：相关项排名的倒数平均\n   - 商业目标达成度：GMV、收入等业务指标的提升\n   - 公平性指标：不同用户群体获得推荐质量的均衡性\n\n评估体系的构建原则\n\n1. **多维度评估**：单一指标无法全面反映系统质量，需要构建多维度的评估体系\n2. **线上线下结合**：离线指标提供快速迭代基础，线上指标验证实际业务价值\n3. **短期长期平衡**：兼顾即时转化与用户长期价值\n4. **A/B测试验证**：通过对照实验验证模型迭代的实际效果\n5. **持续监控与优化**：建立实时监控机制，及时发现并解决问题\n\n推荐系统的评估是一个动态过程，需要根据业务发展阶段和用户需求变化不断调整评估指标和权重，确保系统持续为用户和平台创造价值。\n\n{% asset_img 推荐系统-指标.png 推荐系统指标 %}\n\n## 参考\n\n- [DataFunTalk：推荐系统综述](https://www.datafuntalk.com/p/t_pc/course_pc_detail/image_text/i_64365c0ae4b0cf39e6ba78bc)","slug":"推荐系统101-1-推荐系统介绍","published":1,"updated":"2025-03-14T12:51:48.538Z","__permalink":"/recsys/101-intro/","comments":1,"photos":[],"_id":"cm88sbd7300045gl40vmsd10a","content":"<ul>\n<li><a href=\"#%E7%8E%B0%E4%BB%A3%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F\">现代推荐系统</a></li>\n<li><a href=\"#%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\">推荐系统架构</a></li>\n<li><a href=\"#%E5%8F%AC%E5%9B%9E%E6%A8%A1%E5%9D%97\">召回模块</a>\n<ul>\n<li><a href=\"#%E7%B2%97%E6%8E%92%E6%A8%A1%E5%9D%97\">粗排模块</a></li>\n<li><a href=\"#%E7%B2%BE%E6%8E%92\">精排</a></li>\n<li><a href=\"#%E9%87%8D%E6%8E%92%E6%B7%B7%E6%8E%92\">重排/混排</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%B1%82\">数据层</a></li>\n<li><a href=\"#%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%84%E4%BC%B0\">推荐系统的评估</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>\n<h3 id=\"推荐系统的发展历史\">推荐系统的发展历史</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Recommender_system\">推荐系统</a>是一种信息过滤系统，用于预测用户对物品的&quot;评分&quot;或&quot;偏好&quot;</p>\n<p>一个常见的推荐系统架构：</p>\n<ul>\n<li>目标：匹配用户和信息</li>\n<li>召回：猜用户可能喜欢什么内容</li>\n<li>排序服务: 确定用户最喜欢什么</li>\n<li>重排序（Reranking） 服务：不要出现同样分类、重复密集等</li>\n<li>应用场景：Feed流 信息流</li>\n</ul>\n<div class=\"mermaid\">\n  flowchart LR\n    subgraph \"推荐技术框架\"\n        direction LR\n        A1[\"理点\"] --> B1[\"用户特征\"]\n        A2[\"用户信息\"] --> B1\n        A3[\"信息格式化\"] --> B2[\"信息特征\"]\n        \n        B1 --> C[\"召回服务\"]\n        B2 --> C\n        \n        C --> D[\"排序服务\"]\n        D --> E[\"重排序服务\"]\n        E --> F[\"应用场景\"]\n    end\n</div>\n\n<p>推荐系统发展历史：</p>\n<ol>\n<li>早期阶段（1990年代初）：推荐系统起源于图书馆学科，基于过滤和关键词匹配。代表性产品/服务：早期的图书馆检索系统、学术论文推荐系统。</li>\n<li>协同过滤时期（1990年代末至2000年代初）：引入协同过滤算法，通过分析用户行为，找到相似用户或物品进行推荐。代表性产品/服务：亚马逊的商品推荐、Netflix的电影推荐、Last.fm的音乐推荐。</li>\n<li>内容过滤时期（2000年代中期）：基于内容特征和用户偏好进行推荐，利用物品的元数据和用户画像进行匹配。代表性产品/服务：Google News的新闻推荐、Pandora的音乐推荐、StumbleUpon的网页推荐。</li>\n<li>混合推荐时期（2000年代后期至今）：将协同过滤、内容过滤等不同算法进行组合，提供更准确和多样化的推荐结果。代表性产品/服务：淘宝的商品推荐、Spotify的音乐推荐、LinkedIn的职业推荐。</li>\n<li>个性化推荐时期（2010年代初）：以今日头条为代表，通过机器学习算法实现千人千面的个性化推荐。张一鸣团队开发的推荐算法成为行业标杆，推动了推荐系统的普及和应用。</li>\n<li>深度学习时期（2010年代中期至今）：利用深度学习技术提取更丰富的特征，结合用户行为序列、上下文信息等，进一步提高推荐的准确性。代表性产品/服务：YouTube的视频推荐、TikTok的短视频推荐、Instagram的内容推荐。</li>\n<li>云服务化时期（2020年代至今）：推荐算法在各大厂已经变成标准化的云服务，通过API接口提供给开发者使用。代表性服务：AWS Personalize、Google Recommendations AI、Azure Personalizer。这些服务封装了常用的推荐算法，如协同过滤、内容过滤和混合推荐，同时注重用户隐私保护，仅使用必要的行为数据进行推荐。</li>\n</ol>\n<h3 id=\"协同过滤算法\">协同过滤算法</h3>\n<p>协同过滤算法是推荐系统中的一种基本算法，它基于用户行为数据来推荐物品，对现代推荐系统发展有着深远影响。协同过滤奠定了基于用户行为数据进行推荐的基础思想，为后续的矩阵分解、因子分解机(FFM)、深度学习推荐模型等提供了理论基础。它引入的用户-物品交互矩阵成为推荐系统数据组织的标准方式，而其解决稀疏性和冷启动问题的思路也启发了混合推荐、多模态推荐等新方法。现代推荐系统如YouTube的深度神经网络推荐和TikTok的多目标优化推荐，都能看到协同过滤的影子。</p>\n<p>现在大厂提供的标准化推荐服务（例如火山引擎），大多都是基于协同过滤算法。</p>\n<p>协同过滤算法主要分为以下三种：</p>\n<ol>\n<li><strong>基于内容的推荐</strong>：如果用户浏览或购买过某种类型的内容，则给用户推荐这种类型下的其它内容。例如，向用户推荐某位主演的其他电影，这种是基于内容的推荐。</li>\n<li><strong>基于用户的协同过滤</strong>：基于&quot;跟用户喜好相似的人喜欢的东西，用户也很有可能喜欢&quot;的原理。通过分析用户之间的相似性，找到相似用户群体，然后推荐相似用户喜欢但目标用户尚未接触的物品。例如，&quot;购买了该商品的用户还购买了什么商品&quot;这类推荐。</li>\n<li><strong>基于物品的协同过滤</strong>：基于&quot;与用户喜欢的物品相似的物品，用户也可能喜欢&quot;的原理。通过分析物品之间的相似关系，向用户推荐与其已经喜欢的物品相似的其他物品。例如，用户购买了某个商品后，系统会推荐与该商品经常一起购买的相关商品。</li>\n</ol>\n<h2 id=\"现代推荐系统\">现代推荐系统</h2>\n<p>现代推荐系统的主要流程采用<strong>数据流优先的设计原则</strong>，具有高度灵活性。</p>\n<p>其核心流程为：</p>\n<ol>\n<li>收集用户行为数据</li>\n<li>拼接训练样本</li>\n<li>模型训练</li>\n<li>生成推荐</li>\n<li>用户反馈</li>\n<li>模型更新</li>\n</ol>\n<p>这种设计实现了端到端的实时更新能力，具体特点包括：</p>\n<ol>\n<li>\n<p>模型训练与部署</p>\n<ul>\n<li>支持多种训练框架：LR（逻辑回归）、FM（因子分解机）、TensorFlow、DeepRec等</li>\n<li>自研模型存储系统：统一的数据流架构和模型格式</li>\n<li>快速更新：模型训练到线上更新可在分钟级完成</li>\n<li>多Backend支持：可灵活切换不同计算后端</li>\n</ul>\n</li>\n<li>\n<p>平台化开发</p>\n<ul>\n<li>兼容主流深度学习框架的算子和自研算子</li>\n<li>支持自定义算子开发</li>\n<li>性能优化：针对不同框架进行内存分配和算子优化</li>\n<li>框架迁移：2022年从TensorFlow迁移到DeepRec，发现性能优化思路具有通用性</li>\n</ul>\n</li>\n</ol>\n<p>这种架构设计确保了推荐系统能够快速响应业务需求，同时保持技术栈的灵活性，为持续优化推荐效果提供了坚实的技术基础。</p>\n\n\n\n<h2 id=\"推荐系统架构\">推荐系统架构</h2>\n<h2 id=\"召回模块\">召回模块</h2>\n<p>召回模块的目标是从海量候选集中快速筛选出与用户兴趣相关的候选集合，以较低的计算成本获取高召回率。主要特点：</p>\n<ol>\n<li>效率优先：处理百万甚至亿级别的候选集，要求算法高效</li>\n<li>广覆盖：确保不遗漏潜在相关内容，追求高召回率</li>\n<li>多样性：通过多路召回策略保证推荐内容的多样性</li>\n<li>实时性：能够快速响应用户最新行为和兴趣变化</li>\n</ol>\n<p>工程实现：一般采取多路召回再进行融合</p>\n<ol>\n<li>融合用户特征、商品特征和行为特征，通过多种召回通道获取候选集</li>\n<li>使用向量检索等技术在线上进行高效召回</li>\n<li>多路召回结果融合，平衡效率与多样性</li>\n</ol>\n\n<p>常见召回策略：召回技术可以分为四大类型：传统召回、知识召回、表示召回和匹配召回，实际应用中通常是这些方法的融合。</p>\n\n<ol>\n<li>\n<p>传统召回</p>\n<ul>\n<li>虽然近年来使用减少，但仍占据推荐系统的重要位置</li>\n<li>包括热门召回、协同过滤召回和基于内容的召回\n<ul>\n<li>协同过滤召回：基于用户行为相似性</li>\n<li>内容特征召回：基于内容标签、属性匹配</li>\n<li>热门/时效性召回：基于全局热度和时效性</li>\n</ul>\n</li>\n<li>代表算法：SVD、Slim系列(gSlim、fSlim)、UserCF、ItemCF、Swing等</li>\n</ul>\n</li>\n<li>\n<p>知识召回</p>\n<ul>\n<li>基于知识图谱构建，具有强可解释性和高性能</li>\n<li>实现方式：通过图谱或规则标签建立\n<ul>\n<li>社交关系召回：基于用户社交网络</li>\n<li>兴趣标签召回：基于用户显性兴趣标签</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>应用：基于实体召回、基于标签召回、基于路径推理、基于逻辑表达</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>表示召回</p>\n<ul>\n<li>向量检索召回（将用户和内容映射到同一向量空间）</li>\n<li>从简单双塔模型发展到基于Graph的复杂模型</li>\n<li>主要分类：\n<ul>\n<li>显式行为建模：\n<ul>\n<li>GRE4Rec (Gated Recurrent Units for Recommendation)</li>\n<li>DUPN (Deep User Perception Network)</li>\n<li>BERT4Rec (Bidirectional Encoder Representations from Transformers for Recommendation)</li>\n</ul>\n</li>\n<li>隐式行为建模：\n<ul>\n<li>XDM (eXtreme Deep Factorization Machine)</li>\n</ul>\n</li>\n<li>多兴趣表征：\n<ul>\n<li>MIND (Multi-Interest Network with Dynamic routing)</li>\n<li>SASNet (Self-Attention Sequential Network)</li>\n</ul>\n</li>\n<li>超长行为建模</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>匹配召回</p>\n<ul>\n<li>为精准表征行为，对模型复杂度要求更高</li>\n<li>代表算法：\n<ul>\n<li>NCF (Neural Collaborative Filtering)</li>\n<li>TDM (Tree-based Deep Matching)</li>\n<li>DR (Deep Retrieval)</li>\n</ul>\n</li>\n<li>TDM和DR从检索、模型、索引三方面优化召回链路</li>\n<li>需要精准的负样本采样</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"粗排模块\">粗排模块</h3>\n<p>粗排模块的目标是在召回阶段筛选出的候选集上进行更精细的排序，以提高推荐的准确性和效率。</p>\n<p>粗排模块通常需要平衡模型复杂度和计算效率，处理数百到数千个候选项，为精排阶段提供更优质的候选集。主要特点：</p>\n<ol>\n<li><strong>计算效率与精度平衡</strong>：比召回更精准，比精排更高效</li>\n<li><strong>特征使用</strong>：使用比召回更丰富但比精排更精简的特征集</li>\n<li><strong>模型复杂度</strong>：中等复杂度，通常采用轻量级深度学习模型</li>\n<li><strong>候选集规模</strong>：处理数百到数千个候选项，输出几十到几百个结果</li>\n</ol>\n<p>粗排的发展历程：</p>\n<ul>\n<li><strong>早期</strong>：主要基于人工规则或后验概率统计，简单直接但表达能力有限。</li>\n<li><strong>中期</strong>：引入LR、XFTRL、GBDT等简单线性模型，开始有了基础的特征表达能力。</li>\n<li><strong>现代</strong>：轻量级深度学习模型（如双塔模型、三塔模型、和FSCD模型）将用户和商品分别进行表征后再进行匹配，大幅提升了表达能力。</li>\n<li><strong>最新趋势</strong>：端到端深度粗排、与精排模型协同优化\n<ul>\n<li>如COLD模型、AutoFAS模型等，在特征工程和模型架构上进行深度优化，追求更高性能和精度</li>\n<li><strong>与精排模型的融合</strong>：通过模型蒸馏等技术，使粗排模型能够学习精排模型的能力，保持决策一致性。</li>\n<li><strong>优化目标的一致性</strong>：将粗排的优化目标与整体推荐系统目标对齐，确保粗排决策有利于最终效果。</li>\n<li><strong>工程效率优化</strong>：随着模型复杂度增加，需要更强的工程优化能力来保证实时性。</li>\n</ul>\n</li>\n</ul>\n<p>粗排面临的主要挑战：</p>\n<ol>\n<li>如何与召回和精排保持一致性</li>\n<li>如何在有限计算资源下提高模型表达能力\n<ol>\n<li>特征交叉设计：如何在轻量模型中实现有效的特征交叉</li>\n<li>性能与精度平衡：在保证推理速度的同时提升模型精度</li>\n<li>样本选择偏差(SSB)：如何解决由于前序环节筛选导致的数据分布偏差问题</li>\n</ol>\n</li>\n<li>如何处理样本选择偏差(SSB)问题</li>\n<li>如何设计高效的特征交叉机制</li>\n</ol>\n<p>粗排模型的演进与融合：</p>\n\n<h3 id=\"精排\">精排</h3>\n<p>精排模块是推荐系统中最核心的排序环节，负责对粗排筛选后的候选集进行精细化排序，直接决定最终的推荐结果质量。主要特点：</p>\n<ol>\n<li><strong>高精度优先</strong>：追求最高的预测准确性，是整个推荐系统的核心决策环节</li>\n<li><strong>特征丰富</strong>：使用最全面的特征集，包括用户特征、物品特征、上下文特征和交叉特征</li>\n<li><strong>模型复杂度高</strong>：采用复杂的深度学习模型，充分挖掘特征间的非线性关系</li>\n<li><strong>候选集规模</strong>：处理几十到几百个候选项，输出最终的推荐结果</li>\n</ol>\n<p>精排模块的主要目标：</p>\n<ol>\n<li><strong>准确预测用户行为</strong>：精确预测用户对不同物品的点击率、转化率等关键指标</li>\n<li><strong>多目标平衡</strong>：同时优化点击率、转化率、用户体验等多个业务目标</li>\n<li><strong>实时响应</strong>：在有限的延迟要求下完成复杂模型的推理</li>\n<li><strong>可解释性</strong>：提供推荐结果的解释，增强用户信任和系统透明度</li>\n</ol>\n<p>精排模型的演进历程：</p>\n<ol>\n<li><strong>传统机器学习阶段</strong>\n<ul>\n<li>线性模型：基于LR (Logistic Regression)、MLR (Mixed Logistic Regression)</li>\n<li>树模型：GBDT (Gradient Boosting Decision Tree)、XGBoost</li>\n<li>因子分解：FM (Factorization Machines)、FFM (Field-aware Factorization Machines)</li>\n<li>具体做法：通过样本分组做 MLR、通过特征交叉做 FM，通过 FM 做序列，通过树模型的 GBDT 相关序列，XGBOST 序列，有实时性的、 FTRL、XFTRL等</li>\n<li>优点：训练和推理效率高，可解释性强</li>\n<li>局限：表达能力有限，难以捕捉复杂特征交互</li>\n</ul>\n</li>\n<li><strong>深度学习早期阶段</strong>\n<ul>\n<li>基础深度网络：DNN (Deep Neural Network)、Wide &amp; Deep</li>\n<li>特征交互增强：DeepFM、DCN (Deep &amp; Cross Network)、xDeepFM</li>\n<li>优点：增强了特征交互能力，提升了模型表达能力</li>\n<li>局限：对序列和时序信息建模不足</li>\n</ul>\n</li>\n<li><strong>注意力机制阶段</strong>\n<ul>\n<li>行为序列建模：DIN (Deep Interest Network)、DIEN (Deep Interest Evolution Network)</li>\n<li>多兴趣建模：MIND (Multi-Interest Network)、ComiRec</li>\n<li>优点：能够捕捉用户兴趣动态变化，提升个性化推荐效果</li>\n<li>代表模型：\n<ul>\n<li>DIN：通过注意力机制对用户历史行为进行加权，突出与当前候选物品相关的历史行为</li>\n<li>DIEN：在DIN基础上引入兴趣进化网络，建模用户兴趣的演变过程</li>\n<li>SIM (Search Interest Model)：融合搜索和浏览行为，更全面地理解用户兴趣</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>多任务学习阶段</strong>\n<ul>\n<li>共享表示学习：Shared-Bottom、MMoE (Multi-gate Mixture-of-Experts)</li>\n<li>任务关系建模：PLE (Progressive Layered Extraction)、AITM (Adaptive Information Transfer Multi-task)</li>\n<li>优点：能够同时优化多个业务目标，提升整体推荐效果</li>\n<li>代表模型：\n<ul>\n<li>MMoE：通过多个专家网络和门控机制，实现任务间的选择性知识共享</li>\n<li>PLE：通过分层提取结构，平衡任务间的共享与竞争关系</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>预训练与迁移学习阶段</strong>\n<ul>\n<li>大规模预训练：BERT4Rec、P5 (Personalized Prompt Learning for Product Search)</li>\n<li>跨域迁移：STAR (Sparse Transfer Learning for Recommendation)</li>\n<li>优点：能够利用大规模数据和跨域知识，提升推荐效果</li>\n<li>局限：计算资源需求高，工程实现复杂</li>\n</ul>\n</li>\n</ol>\n<p>精排面临的主要挑战：</p>\n<ol>\n<li>\n<p><strong>多目标优化</strong>：如何平衡点击率、转化率、用户体验等多个业务目标</p>\n<ul>\n<li>解决方案：多任务学习、帕累托最优、约束优化等</li>\n</ul>\n</li>\n<li>\n<p><strong>样本偏差处理</strong>：如何处理曝光选择偏差、位置偏差等数据偏差问题</p>\n<ul>\n<li>解决方案：反事实学习、因果推断、去偏技术等</li>\n</ul>\n</li>\n<li>\n<p><strong>冷启动问题</strong>：如何处理新用户、新物品的推荐问题</p>\n<ul>\n<li>解决方案：元学习、迁移学习、内容特征增强等</li>\n</ul>\n</li>\n<li>\n<p><strong>计算效率与实时性</strong>：如何在保证模型复杂度的同时满足实时推理需求</p>\n<ul>\n<li>解决方案：模型压缩、知识蒸馏、分布式计算等</li>\n</ul>\n</li>\n<li>\n<p><strong>可解释性与透明度</strong>：如何提供推荐结果的解释，增强用户信任</p>\n<ul>\n<li>解决方案：注意力可视化、特征重要性分析、本地解释模型等</li>\n</ul>\n</li>\n</ol>\n\n<p>该技术演进图可以从四个部分来分析：</p>\n<ul>\n<li>下部分：主要基于多层感知机(MLP)到Wide &amp; Deep的演进路线，包括Deep &amp; Cross Network(DCN)、DeepFM、Attentional Factorization Machine(AFM)、Neural Factorization Machine(NFM)等模型，这些模型都是针对特定部分进行优化</li>\n<li>上部分：主要是对多层感知机(MLP)架构的增强，引入了注意力(Attention)机制、Product Layer以及图神经网络(GNN)等先进技术</li>\n<li>右侧部分：主要基于自编码器(AE)、强化学习或神经协同过滤(NCF)的改进和变体</li>\n<li>左侧部分：主要是基于注意力机制演化而来，包括Deep Interest Network(DIN)、Deep Interest Evolution Network(DIEN)、Multi-channel Interest Merge Network(MIMN)、Deep Session Interest Network(DSIN)和Search Interest Model(SIM)等模型，主要解决长序列建模问题</li>\n</ul>\n<p>精排技术的发展趋势主要朝着四个方向发展：多模块、多任务、多目标和多模态。其中：</p>\n<ul>\n<li>多任务方向：代表模型有Multi-gate Mixture-of-Experts(MMoE)和Progressive Layered Extraction(PLE)等</li>\n<li>多目标方向：代表技术有帕累托最优等</li>\n<li>多模态方向：代表模型有Multi-Modal Graph Convolution Network(MMGCN)、LOGO等</li>\n</ul>\n<p>这些发展趋势体现在三个核心方面：、</p>\n<ol>\n<li>模型目标：从单一目标向多目标优化转变</li>\n<li>模型表达：采用更成熟复杂的结构增强表达能力</li>\n<li>模型容量：通过引入更多特征处理和外部信息扩充模型容量</li>\n</ol>\n<h3 id=\"重排-混排\">重排/混排</h3>\n<p>重排（Reranking）是推荐系统流程中的最后一个环节，主要负责对精排输出的候选集进行最终调整和优化，以提升整体推荐效果。与精排不同，重排阶段可以：</p>\n<ol>\n<li><strong>全局优化</strong>：考虑候选集整体的多样性、新颖性和覆盖度\n<ul>\n<li>解决方案：基于贪心算法、整数规划、强化学习等方法</li>\n</ul>\n</li>\n<li><strong>考虑上下文</strong>：将用户当前状态、历史交互和页面展示效果纳入考量\n<ul>\n<li>解决方案：序列模型、注意力机制、图神经网络等</li>\n</ul>\n</li>\n<li><strong>实时反馈</strong>：能够利用用户最新的交互信号进行实时调整\n<ul>\n<li>解决方案：在线学习、增量更新、边缘计算等</li>\n</ul>\n</li>\n</ol>\n<p>重排的主要技术方法包括：</p>\n<ol>\n<li><strong>基于规则的重排</strong>\n<ul>\n<li>多样性规则：控制同类内容比例、打散相似内容</li>\n<li>约束规则：业务规则、合规要求、运营干预等</li>\n<li>优点：可解释性强，易于实现和调整</li>\n<li>局限：难以捕捉复杂模式，规则维护成本高</li>\n</ul>\n</li>\n<li><strong>基于模型的重排</strong>\n<ul>\n<li>全局排序模型：DLCM (Deep Listwise Context Model)、PRM (Personalized Re-ranking Model)</li>\n<li>序列感知模型：SetRank、IRGPR (Intent-aware Re-ranking with Graph Neural Networks)</li>\n<li>优点：能够学习复杂的全局依赖关系，提升整体推荐质量</li>\n<li>局限：计算复杂度高，实时性要求高</li>\n</ul>\n</li>\n<li><strong>基于强化学习的重排</strong>\n<ul>\n<li>策略梯度方法：REINFORCE、Actor-Critic</li>\n<li>值函数方法：DQN、Double DQN</li>\n<li>优点：能够直接优化长期收益，处理延迟反馈</li>\n<li>局限：训练不稳定，样本效率低</li>\n</ul>\n</li>\n<li><strong>边缘计算重排</strong>\n<ul>\n<li>轻量级模型：EdgeRec（阿里开源）、MobileRec</li>\n<li>模型压缩：量化、剪枝、知识蒸馏</li>\n<li>优点：低延迟，能够利用端侧实时信息</li>\n<li>局限：模型能力受限，依赖端侧计算资源</li>\n</ul>\n</li>\n</ol>\n<p>重排面临的主要挑战：</p>\n<ol>\n<li><strong>实时性与复杂性平衡</strong>：如何在毫秒级响应时间内完成复杂的全局优化\n<ul>\n<li>解决方案：模型压缩、计算优化、分布式处理</li>\n</ul>\n</li>\n<li><strong>评估指标多元化</strong>：如何平衡点击率、多样性、用户满意度等多维度指标\n<ul>\n<li>解决方案：多目标优化、加权评分、A/B测试</li>\n</ul>\n</li>\n<li><strong>冷启动与探索</strong>：如何在重排阶段引入探索机制，避免推荐系统固化\n<ul>\n<li>解决方案：Thompson采样、上下文赌臂算法、探索-利用平衡</li>\n</ul>\n</li>\n<li><strong>个性化与公平性</strong>：如何在满足个性化的同时保证算法公平性和内容多样性\n<ul>\n<li>解决方案：公平性约束、多样性指标、伦理审计</li>\n</ul>\n</li>\n</ol>\n<p>例如，序列重排：</p>\n\n<h3 id=\"数据层\">数据层</h3>\n<p>数据层是推荐系统的基础，负责数据的收集、处理和存储，为上层算法提供高质量的数据支持。一个完善的数据层架构通常包括以下几个关键组件：</p>\n<ol>\n<li>\n<p><strong>数据采集系统</strong></p>\n<ul>\n<li>埋点设计、采集方案和数据流设计</li>\n<li><strong>用户行为数据</strong>：点击、浏览、停留时间、收藏、分享、评论等</li>\n<li><strong>内容特征数据</strong>：文本、图像、视频、音频的结构化和非结构化特征</li>\n<li><strong>上下文数据</strong>：时间、地点、设备、网络环境等</li>\n<li><strong>业务数据</strong>：交易、支付、退款、客服互动等</li>\n</ul>\n</li>\n<li>\n<p><strong>数据处理框架</strong></p>\n<ul>\n<li><strong>实时处理</strong>：Kafka、Flink、Spark Streaming等</li>\n<li><strong>离线处理</strong>：Hadoop、Spark、Hive等</li>\n<li><strong>特征存储</strong>：Redis、HBase、Cassandra、特征存储系统(如阿里的FeatureStore)</li>\n</ul>\n</li>\n<li>\n<p><strong>特征工程系统</strong></p>\n<ul>\n<li><strong>特征提取</strong>：从原始数据中提取有价值的信号</li>\n<li><strong>特征变换</strong>：归一化、标准化、离散化、编码等</li>\n<li><strong>特征选择</strong>：过滤、包装、嵌入式方法等</li>\n<li><strong>特征组合</strong>：交叉特征、多域特征融合等</li>\n</ul>\n</li>\n<li>\n<p><strong>用户理解系统</strong></p>\n<ul>\n<li><strong>数据层</strong>：构建全面的用户画像基础\n<ul>\n<li>全面收集用户基础信息、行为信息、时空信息及设备信息</li>\n<li>依赖成熟的实时数据采集框架支持</li>\n<li>确保数据的全面性、实时性和准确性</li>\n</ul>\n</li>\n<li><strong>洞察层</strong>：深度分析用户特征\n<ul>\n<li>用户价值洞察：消费能力、活跃度、忠诚度等</li>\n<li>行为模式洞察：浏览习惯、购买周期、兴趣变化等</li>\n<li>生命周期洞察：新用户、成长期、成熟期、流失风险等</li>\n<li>标签体系建设：需求强度标签、价格敏感度标签、行为序列模式标签等</li>\n</ul>\n</li>\n<li><strong>理解层</strong>：用户偏好与意图解析\n<ul>\n<li>显式理解：\n<ul>\n<li>用户行为筛选与分析（物料、类目偏好等）</li>\n<li>兴趣标签抽取与权重计算</li>\n<li>用户群体聚类与相似用户发现（Lookalike模型）</li>\n<li>高层意图推断（购买力、品牌偏好、决策周期等）</li>\n<li>用户生命周期全链路理解（从浏览到购买决策的完整路径）</li>\n</ul>\n</li>\n<li>隐式理解/表达：\n<ul>\n<li>多维度用户行为向量化表达</li>\n<li>多模态行为序列建模（短期、长期、超长期）</li>\n<li>行为序列的隐式语义挖掘</li>\n<li>生命周期的连续性表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>可解释性建设</strong>：\n<ul>\n<li>基于相似用户和商品的推荐解释机制</li>\n<li>基于文本和视觉内容的推荐理由生成</li>\n<li>通过社交关系网络增强推荐可信度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n\n<p>数据层的核心挑战包括：</p>\n<ol>\n<li><strong>数据质量保障</strong>\n<ul>\n<li>完整性：确保数据无缺失、无重复</li>\n<li>准确性：确保数据真实反映用户行为和内容特征</li>\n<li>时效性：确保数据能够及时更新和处理</li>\n</ul>\n</li>\n<li><strong>数据规模处理</strong>\n<ul>\n<li>海量数据存储：PB级数据的高效存储和检索</li>\n<li>高并发处理：每秒百万级请求的实时处理</li>\n<li>低延迟访问：毫秒级的特征获取和计算</li>\n</ul>\n</li>\n<li><strong>数据隐私保护</strong>\n<ul>\n<li>数据脱敏：敏感信息的加密和匿名化</li>\n<li>访问控制：严格的数据访问权限管理</li>\n<li>合规处理：符合GDPR、CCPA等隐私法规</li>\n</ul>\n</li>\n</ol>\n<p>在实际应用中，大型推荐系统通常采用Lambda架构或Kappa架构，结合批处理和流处理能力，以满足不同场景下的数据处理需求。</p>\n<h3 id=\"推荐系统的评估\">推荐系统的评估</h3>\n<p>推荐系统的评估是确保系统有效性和持续优化的关键环节，主要分为线上业务指标和离线模型指标两大类：</p>\n<p>线上/业务指标</p>\n<p>线上指标直接反映推荐系统对业务的实际影响，是最终评判系统价值的关键：</p>\n<ol>\n<li><strong>转化率指标</strong>\n<ul>\n<li>点击率(CTR)：用户点击推荐内容的比例</li>\n<li>购买转化率(CVR)：从推荐到最终购买的转化比例</li>\n<li>下单率(Order Rate)：用户通过推荐系统产生订单的比例</li>\n<li>留存率(Retention Rate)：推荐系统对用户留存的提升效果</li>\n</ul>\n</li>\n<li><strong>推荐质量指标</strong>\n<ul>\n<li>覆盖率(Coverage)：推荐系统能够推荐的物品占总物品的比例</li>\n<li>多样性(Diversity)：推荐结果的类别丰富程度</li>\n<li>新颖性(Novelty)：推荐结果中新内容的比例</li>\n<li>相关性(Relevance)：推荐内容与用户兴趣的匹配度</li>\n<li>时效性(Timeliness)：推荐内容的实时更新能力</li>\n</ul>\n</li>\n<li><strong>用户满意度指标</strong>\n<ul>\n<li>用户反馈评分：用户对推荐内容的直接评价</li>\n<li>停留时长：用户在推荐内容上的停留时间</li>\n<li>互动深度：评论、分享、收藏等深度互动行为</li>\n<li>NPS(净推荐值)：用户推荐意愿的综合评分</li>\n<li>用户投诉率：对推荐内容不满的反馈比例</li>\n</ul>\n</li>\n</ol>\n<p>离线/模型链路指标</p>\n<p>离线指标主要用于算法迭代和模型优化，按推荐系统的不同阶段有不同的评估重点：</p>\n<ol>\n<li><strong>召回阶段指标</strong>\n<ul>\n<li>Recall(召回率)：正确召回的相关物品占所有相关物品的比例</li>\n<li>Precision(精确率)：正确召回的物品占所有召回物品的比例</li>\n<li>F1 Score：Recall和Precision的调和平均</li>\n<li>Hit Rate：至少一次命中的比例</li>\n<li>NS-recall/NS-precision：考虑负采样的召回/精确率</li>\n<li>KL散度：评估推荐分布与真实分布的差异</li>\n<li>长尾覆盖率：对非热门内容的推荐能力</li>\n</ul>\n</li>\n<li><strong>粗排阶段指标</strong>\n<ul>\n<li>AUC(曲线下面积)：模型区分正负样本的能力</li>\n<li>GAUC(分组AUC)：考虑用户分组的AUC加权</li>\n<li>MAP(平均精度均值)：考虑排序位置的精确率</li>\n<li><strong>与精排一致性</strong>：粗排结果与精排打分的相关性</li>\n<li>计算效率：处理速度和资源消耗</li>\n</ul>\n</li>\n<li><strong>精排和重排阶段指标</strong>\n<ul>\n<li>场景化AUC/GAUC：不同场景下的区分能力</li>\n<li>分类目/人群AUC：针对不同类目和用户群体的表现</li>\n<li>NDCG(归一化折损累计增益)：考虑位置权重的排序质量</li>\n<li>MRR(平均倒数排名)：相关项排名的倒数平均</li>\n<li>商业目标达成度：GMV、收入等业务指标的提升</li>\n<li>公平性指标：不同用户群体获得推荐质量的均衡性</li>\n</ul>\n</li>\n</ol>\n<p>评估体系的构建原则</p>\n<ol>\n<li><strong>多维度评估</strong>：单一指标无法全面反映系统质量，需要构建多维度的评估体系</li>\n<li><strong>线上线下结合</strong>：离线指标提供快速迭代基础，线上指标验证实际业务价值</li>\n<li><strong>短期长期平衡</strong>：兼顾即时转化与用户长期价值</li>\n<li><strong>A/B测试验证</strong>：通过对照实验验证模型迭代的实际效果</li>\n<li><strong>持续监控与优化</strong>：建立实时监控机制，及时发现并解决问题</li>\n</ol>\n<p>推荐系统的评估是一个动态过程，需要根据业务发展阶段和用户需求变化不断调整评估指标和权重，确保系统持续为用户和平台创造价值。</p>\n\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li><a href=\"https://www.datafuntalk.com/p/t_pc/course_pc_detail/image_text/i_64365c0ae4b0cf39e6ba78bc\">DataFunTalk：推荐系统综述</a></li>\n</ul>\n","excerpt":"","more":"<ul>\n<li><a href=\"#%E7%8E%B0%E4%BB%A3%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F\">现代推荐系统</a></li>\n<li><a href=\"#%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\">推荐系统架构</a></li>\n<li><a href=\"#%E5%8F%AC%E5%9B%9E%E6%A8%A1%E5%9D%97\">召回模块</a>\n<ul>\n<li><a href=\"#%E7%B2%97%E6%8E%92%E6%A8%A1%E5%9D%97\">粗排模块</a></li>\n<li><a href=\"#%E7%B2%BE%E6%8E%92\">精排</a></li>\n<li><a href=\"#%E9%87%8D%E6%8E%92%E6%B7%B7%E6%8E%92\">重排/混排</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%B1%82\">数据层</a></li>\n<li><a href=\"#%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%84%E4%BC%B0\">推荐系统的评估</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>\n<h3 id=\"推荐系统的发展历史\">推荐系统的发展历史</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Recommender_system\">推荐系统</a>是一种信息过滤系统，用于预测用户对物品的&quot;评分&quot;或&quot;偏好&quot;</p>\n<p>一个常见的推荐系统架构：</p>\n<ul>\n<li>目标：匹配用户和信息</li>\n<li>召回：猜用户可能喜欢什么内容</li>\n<li>排序服务: 确定用户最喜欢什么</li>\n<li>重排序（Reranking） 服务：不要出现同样分类、重复密集等</li>\n<li>应用场景：Feed流 信息流</li>\n</ul>\n<div class=\"mermaid\">\n  flowchart LR\n    subgraph \"推荐技术框架\"\n        direction LR\n        A1[\"理点\"] --> B1[\"用户特征\"]\n        A2[\"用户信息\"] --> B1\n        A3[\"信息格式化\"] --> B2[\"信息特征\"]\n        \n        B1 --> C[\"召回服务\"]\n        B2 --> C\n        \n        C --> D[\"排序服务\"]\n        D --> E[\"重排序服务\"]\n        E --> F[\"应用场景\"]\n    end\n</div>\n\n<p>推荐系统发展历史：</p>\n<ol>\n<li>早期阶段（1990年代初）：推荐系统起源于图书馆学科，基于过滤和关键词匹配。代表性产品/服务：早期的图书馆检索系统、学术论文推荐系统。</li>\n<li>协同过滤时期（1990年代末至2000年代初）：引入协同过滤算法，通过分析用户行为，找到相似用户或物品进行推荐。代表性产品/服务：亚马逊的商品推荐、Netflix的电影推荐、Last.fm的音乐推荐。</li>\n<li>内容过滤时期（2000年代中期）：基于内容特征和用户偏好进行推荐，利用物品的元数据和用户画像进行匹配。代表性产品/服务：Google News的新闻推荐、Pandora的音乐推荐、StumbleUpon的网页推荐。</li>\n<li>混合推荐时期（2000年代后期至今）：将协同过滤、内容过滤等不同算法进行组合，提供更准确和多样化的推荐结果。代表性产品/服务：淘宝的商品推荐、Spotify的音乐推荐、LinkedIn的职业推荐。</li>\n<li>个性化推荐时期（2010年代初）：以今日头条为代表，通过机器学习算法实现千人千面的个性化推荐。张一鸣团队开发的推荐算法成为行业标杆，推动了推荐系统的普及和应用。</li>\n<li>深度学习时期（2010年代中期至今）：利用深度学习技术提取更丰富的特征，结合用户行为序列、上下文信息等，进一步提高推荐的准确性。代表性产品/服务：YouTube的视频推荐、TikTok的短视频推荐、Instagram的内容推荐。</li>\n<li>云服务化时期（2020年代至今）：推荐算法在各大厂已经变成标准化的云服务，通过API接口提供给开发者使用。代表性服务：AWS Personalize、Google Recommendations AI、Azure Personalizer。这些服务封装了常用的推荐算法，如协同过滤、内容过滤和混合推荐，同时注重用户隐私保护，仅使用必要的行为数据进行推荐。</li>\n</ol>\n<h3 id=\"协同过滤算法\">协同过滤算法</h3>\n<p>协同过滤算法是推荐系统中的一种基本算法，它基于用户行为数据来推荐物品，对现代推荐系统发展有着深远影响。协同过滤奠定了基于用户行为数据进行推荐的基础思想，为后续的矩阵分解、因子分解机(FFM)、深度学习推荐模型等提供了理论基础。它引入的用户-物品交互矩阵成为推荐系统数据组织的标准方式，而其解决稀疏性和冷启动问题的思路也启发了混合推荐、多模态推荐等新方法。现代推荐系统如YouTube的深度神经网络推荐和TikTok的多目标优化推荐，都能看到协同过滤的影子。</p>\n<p>现在大厂提供的标准化推荐服务（例如火山引擎），大多都是基于协同过滤算法。</p>\n<p>协同过滤算法主要分为以下三种：</p>\n<ol>\n<li><strong>基于内容的推荐</strong>：如果用户浏览或购买过某种类型的内容，则给用户推荐这种类型下的其它内容。例如，向用户推荐某位主演的其他电影，这种是基于内容的推荐。</li>\n<li><strong>基于用户的协同过滤</strong>：基于&quot;跟用户喜好相似的人喜欢的东西，用户也很有可能喜欢&quot;的原理。通过分析用户之间的相似性，找到相似用户群体，然后推荐相似用户喜欢但目标用户尚未接触的物品。例如，&quot;购买了该商品的用户还购买了什么商品&quot;这类推荐。</li>\n<li><strong>基于物品的协同过滤</strong>：基于&quot;与用户喜欢的物品相似的物品，用户也可能喜欢&quot;的原理。通过分析物品之间的相似关系，向用户推荐与其已经喜欢的物品相似的其他物品。例如，用户购买了某个商品后，系统会推荐与该商品经常一起购买的相关商品。</li>\n</ol>\n<h2 id=\"现代推荐系统\">现代推荐系统</h2>\n<p>现代推荐系统的主要流程采用<strong>数据流优先的设计原则</strong>，具有高度灵活性。</p>\n<p>其核心流程为：</p>\n<ol>\n<li>收集用户行为数据</li>\n<li>拼接训练样本</li>\n<li>模型训练</li>\n<li>生成推荐</li>\n<li>用户反馈</li>\n<li>模型更新</li>\n</ol>\n<p>这种设计实现了端到端的实时更新能力，具体特点包括：</p>\n<ol>\n<li>\n<p>模型训练与部署</p>\n<ul>\n<li>支持多种训练框架：LR（逻辑回归）、FM（因子分解机）、TensorFlow、DeepRec等</li>\n<li>自研模型存储系统：统一的数据流架构和模型格式</li>\n<li>快速更新：模型训练到线上更新可在分钟级完成</li>\n<li>多Backend支持：可灵活切换不同计算后端</li>\n</ul>\n</li>\n<li>\n<p>平台化开发</p>\n<ul>\n<li>兼容主流深度学习框架的算子和自研算子</li>\n<li>支持自定义算子开发</li>\n<li>性能优化：针对不同框架进行内存分配和算子优化</li>\n<li>框架迁移：2022年从TensorFlow迁移到DeepRec，发现性能优化思路具有通用性</li>\n</ul>\n</li>\n</ol>\n<p>这种架构设计确保了推荐系统能够快速响应业务需求，同时保持技术栈的灵活性，为持续优化推荐效果提供了坚实的技术基础。</p>\n\n\n\n<h2 id=\"推荐系统架构\">推荐系统架构</h2>\n<h2 id=\"召回模块\">召回模块</h2>\n<p>召回模块的目标是从海量候选集中快速筛选出与用户兴趣相关的候选集合，以较低的计算成本获取高召回率。主要特点：</p>\n<ol>\n<li>效率优先：处理百万甚至亿级别的候选集，要求算法高效</li>\n<li>广覆盖：确保不遗漏潜在相关内容，追求高召回率</li>\n<li>多样性：通过多路召回策略保证推荐内容的多样性</li>\n<li>实时性：能够快速响应用户最新行为和兴趣变化</li>\n</ol>\n<p>工程实现：一般采取多路召回再进行融合</p>\n<ol>\n<li>融合用户特征、商品特征和行为特征，通过多种召回通道获取候选集</li>\n<li>使用向量检索等技术在线上进行高效召回</li>\n<li>多路召回结果融合，平衡效率与多样性</li>\n</ol>\n\n<p>常见召回策略：召回技术可以分为四大类型：传统召回、知识召回、表示召回和匹配召回，实际应用中通常是这些方法的融合。</p>\n\n<ol>\n<li>\n<p>传统召回</p>\n<ul>\n<li>虽然近年来使用减少，但仍占据推荐系统的重要位置</li>\n<li>包括热门召回、协同过滤召回和基于内容的召回\n<ul>\n<li>协同过滤召回：基于用户行为相似性</li>\n<li>内容特征召回：基于内容标签、属性匹配</li>\n<li>热门/时效性召回：基于全局热度和时效性</li>\n</ul>\n</li>\n<li>代表算法：SVD、Slim系列(gSlim、fSlim)、UserCF、ItemCF、Swing等</li>\n</ul>\n</li>\n<li>\n<p>知识召回</p>\n<ul>\n<li>基于知识图谱构建，具有强可解释性和高性能</li>\n<li>实现方式：通过图谱或规则标签建立\n<ul>\n<li>社交关系召回：基于用户社交网络</li>\n<li>兴趣标签召回：基于用户显性兴趣标签</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>应用：基于实体召回、基于标签召回、基于路径推理、基于逻辑表达</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p>表示召回</p>\n<ul>\n<li>向量检索召回（将用户和内容映射到同一向量空间）</li>\n<li>从简单双塔模型发展到基于Graph的复杂模型</li>\n<li>主要分类：\n<ul>\n<li>显式行为建模：\n<ul>\n<li>GRE4Rec (Gated Recurrent Units for Recommendation)</li>\n<li>DUPN (Deep User Perception Network)</li>\n<li>BERT4Rec (Bidirectional Encoder Representations from Transformers for Recommendation)</li>\n</ul>\n</li>\n<li>隐式行为建模：\n<ul>\n<li>XDM (eXtreme Deep Factorization Machine)</li>\n</ul>\n</li>\n<li>多兴趣表征：\n<ul>\n<li>MIND (Multi-Interest Network with Dynamic routing)</li>\n<li>SASNet (Self-Attention Sequential Network)</li>\n</ul>\n</li>\n<li>超长行为建模</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>匹配召回</p>\n<ul>\n<li>为精准表征行为，对模型复杂度要求更高</li>\n<li>代表算法：\n<ul>\n<li>NCF (Neural Collaborative Filtering)</li>\n<li>TDM (Tree-based Deep Matching)</li>\n<li>DR (Deep Retrieval)</li>\n</ul>\n</li>\n<li>TDM和DR从检索、模型、索引三方面优化召回链路</li>\n<li>需要精准的负样本采样</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"粗排模块\">粗排模块</h3>\n<p>粗排模块的目标是在召回阶段筛选出的候选集上进行更精细的排序，以提高推荐的准确性和效率。</p>\n<p>粗排模块通常需要平衡模型复杂度和计算效率，处理数百到数千个候选项，为精排阶段提供更优质的候选集。主要特点：</p>\n<ol>\n<li><strong>计算效率与精度平衡</strong>：比召回更精准，比精排更高效</li>\n<li><strong>特征使用</strong>：使用比召回更丰富但比精排更精简的特征集</li>\n<li><strong>模型复杂度</strong>：中等复杂度，通常采用轻量级深度学习模型</li>\n<li><strong>候选集规模</strong>：处理数百到数千个候选项，输出几十到几百个结果</li>\n</ol>\n<p>粗排的发展历程：</p>\n<ul>\n<li><strong>早期</strong>：主要基于人工规则或后验概率统计，简单直接但表达能力有限。</li>\n<li><strong>中期</strong>：引入LR、XFTRL、GBDT等简单线性模型，开始有了基础的特征表达能力。</li>\n<li><strong>现代</strong>：轻量级深度学习模型（如双塔模型、三塔模型、和FSCD模型）将用户和商品分别进行表征后再进行匹配，大幅提升了表达能力。</li>\n<li><strong>最新趋势</strong>：端到端深度粗排、与精排模型协同优化\n<ul>\n<li>如COLD模型、AutoFAS模型等，在特征工程和模型架构上进行深度优化，追求更高性能和精度</li>\n<li><strong>与精排模型的融合</strong>：通过模型蒸馏等技术，使粗排模型能够学习精排模型的能力，保持决策一致性。</li>\n<li><strong>优化目标的一致性</strong>：将粗排的优化目标与整体推荐系统目标对齐，确保粗排决策有利于最终效果。</li>\n<li><strong>工程效率优化</strong>：随着模型复杂度增加，需要更强的工程优化能力来保证实时性。</li>\n</ul>\n</li>\n</ul>\n<p>粗排面临的主要挑战：</p>\n<ol>\n<li>如何与召回和精排保持一致性</li>\n<li>如何在有限计算资源下提高模型表达能力\n<ol>\n<li>特征交叉设计：如何在轻量模型中实现有效的特征交叉</li>\n<li>性能与精度平衡：在保证推理速度的同时提升模型精度</li>\n<li>样本选择偏差(SSB)：如何解决由于前序环节筛选导致的数据分布偏差问题</li>\n</ol>\n</li>\n<li>如何处理样本选择偏差(SSB)问题</li>\n<li>如何设计高效的特征交叉机制</li>\n</ol>\n<p>粗排模型的演进与融合：</p>\n\n<h3 id=\"精排\">精排</h3>\n<p>精排模块是推荐系统中最核心的排序环节，负责对粗排筛选后的候选集进行精细化排序，直接决定最终的推荐结果质量。主要特点：</p>\n<ol>\n<li><strong>高精度优先</strong>：追求最高的预测准确性，是整个推荐系统的核心决策环节</li>\n<li><strong>特征丰富</strong>：使用最全面的特征集，包括用户特征、物品特征、上下文特征和交叉特征</li>\n<li><strong>模型复杂度高</strong>：采用复杂的深度学习模型，充分挖掘特征间的非线性关系</li>\n<li><strong>候选集规模</strong>：处理几十到几百个候选项，输出最终的推荐结果</li>\n</ol>\n<p>精排模块的主要目标：</p>\n<ol>\n<li><strong>准确预测用户行为</strong>：精确预测用户对不同物品的点击率、转化率等关键指标</li>\n<li><strong>多目标平衡</strong>：同时优化点击率、转化率、用户体验等多个业务目标</li>\n<li><strong>实时响应</strong>：在有限的延迟要求下完成复杂模型的推理</li>\n<li><strong>可解释性</strong>：提供推荐结果的解释，增强用户信任和系统透明度</li>\n</ol>\n<p>精排模型的演进历程：</p>\n<ol>\n<li><strong>传统机器学习阶段</strong>\n<ul>\n<li>线性模型：基于LR (Logistic Regression)、MLR (Mixed Logistic Regression)</li>\n<li>树模型：GBDT (Gradient Boosting Decision Tree)、XGBoost</li>\n<li>因子分解：FM (Factorization Machines)、FFM (Field-aware Factorization Machines)</li>\n<li>具体做法：通过样本分组做 MLR、通过特征交叉做 FM，通过 FM 做序列，通过树模型的 GBDT 相关序列，XGBOST 序列，有实时性的、 FTRL、XFTRL等</li>\n<li>优点：训练和推理效率高，可解释性强</li>\n<li>局限：表达能力有限，难以捕捉复杂特征交互</li>\n</ul>\n</li>\n<li><strong>深度学习早期阶段</strong>\n<ul>\n<li>基础深度网络：DNN (Deep Neural Network)、Wide &amp; Deep</li>\n<li>特征交互增强：DeepFM、DCN (Deep &amp; Cross Network)、xDeepFM</li>\n<li>优点：增强了特征交互能力，提升了模型表达能力</li>\n<li>局限：对序列和时序信息建模不足</li>\n</ul>\n</li>\n<li><strong>注意力机制阶段</strong>\n<ul>\n<li>行为序列建模：DIN (Deep Interest Network)、DIEN (Deep Interest Evolution Network)</li>\n<li>多兴趣建模：MIND (Multi-Interest Network)、ComiRec</li>\n<li>优点：能够捕捉用户兴趣动态变化，提升个性化推荐效果</li>\n<li>代表模型：\n<ul>\n<li>DIN：通过注意力机制对用户历史行为进行加权，突出与当前候选物品相关的历史行为</li>\n<li>DIEN：在DIN基础上引入兴趣进化网络，建模用户兴趣的演变过程</li>\n<li>SIM (Search Interest Model)：融合搜索和浏览行为，更全面地理解用户兴趣</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>多任务学习阶段</strong>\n<ul>\n<li>共享表示学习：Shared-Bottom、MMoE (Multi-gate Mixture-of-Experts)</li>\n<li>任务关系建模：PLE (Progressive Layered Extraction)、AITM (Adaptive Information Transfer Multi-task)</li>\n<li>优点：能够同时优化多个业务目标，提升整体推荐效果</li>\n<li>代表模型：\n<ul>\n<li>MMoE：通过多个专家网络和门控机制，实现任务间的选择性知识共享</li>\n<li>PLE：通过分层提取结构，平衡任务间的共享与竞争关系</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>预训练与迁移学习阶段</strong>\n<ul>\n<li>大规模预训练：BERT4Rec、P5 (Personalized Prompt Learning for Product Search)</li>\n<li>跨域迁移：STAR (Sparse Transfer Learning for Recommendation)</li>\n<li>优点：能够利用大规模数据和跨域知识，提升推荐效果</li>\n<li>局限：计算资源需求高，工程实现复杂</li>\n</ul>\n</li>\n</ol>\n<p>精排面临的主要挑战：</p>\n<ol>\n<li>\n<p><strong>多目标优化</strong>：如何平衡点击率、转化率、用户体验等多个业务目标</p>\n<ul>\n<li>解决方案：多任务学习、帕累托最优、约束优化等</li>\n</ul>\n</li>\n<li>\n<p><strong>样本偏差处理</strong>：如何处理曝光选择偏差、位置偏差等数据偏差问题</p>\n<ul>\n<li>解决方案：反事实学习、因果推断、去偏技术等</li>\n</ul>\n</li>\n<li>\n<p><strong>冷启动问题</strong>：如何处理新用户、新物品的推荐问题</p>\n<ul>\n<li>解决方案：元学习、迁移学习、内容特征增强等</li>\n</ul>\n</li>\n<li>\n<p><strong>计算效率与实时性</strong>：如何在保证模型复杂度的同时满足实时推理需求</p>\n<ul>\n<li>解决方案：模型压缩、知识蒸馏、分布式计算等</li>\n</ul>\n</li>\n<li>\n<p><strong>可解释性与透明度</strong>：如何提供推荐结果的解释，增强用户信任</p>\n<ul>\n<li>解决方案：注意力可视化、特征重要性分析、本地解释模型等</li>\n</ul>\n</li>\n</ol>\n\n<p>该技术演进图可以从四个部分来分析：</p>\n<ul>\n<li>下部分：主要基于多层感知机(MLP)到Wide &amp; Deep的演进路线，包括Deep &amp; Cross Network(DCN)、DeepFM、Attentional Factorization Machine(AFM)、Neural Factorization Machine(NFM)等模型，这些模型都是针对特定部分进行优化</li>\n<li>上部分：主要是对多层感知机(MLP)架构的增强，引入了注意力(Attention)机制、Product Layer以及图神经网络(GNN)等先进技术</li>\n<li>右侧部分：主要基于自编码器(AE)、强化学习或神经协同过滤(NCF)的改进和变体</li>\n<li>左侧部分：主要是基于注意力机制演化而来，包括Deep Interest Network(DIN)、Deep Interest Evolution Network(DIEN)、Multi-channel Interest Merge Network(MIMN)、Deep Session Interest Network(DSIN)和Search Interest Model(SIM)等模型，主要解决长序列建模问题</li>\n</ul>\n<p>精排技术的发展趋势主要朝着四个方向发展：多模块、多任务、多目标和多模态。其中：</p>\n<ul>\n<li>多任务方向：代表模型有Multi-gate Mixture-of-Experts(MMoE)和Progressive Layered Extraction(PLE)等</li>\n<li>多目标方向：代表技术有帕累托最优等</li>\n<li>多模态方向：代表模型有Multi-Modal Graph Convolution Network(MMGCN)、LOGO等</li>\n</ul>\n<p>这些发展趋势体现在三个核心方面：、</p>\n<ol>\n<li>模型目标：从单一目标向多目标优化转变</li>\n<li>模型表达：采用更成熟复杂的结构增强表达能力</li>\n<li>模型容量：通过引入更多特征处理和外部信息扩充模型容量</li>\n</ol>\n<h3 id=\"重排-混排\">重排/混排</h3>\n<p>重排（Reranking）是推荐系统流程中的最后一个环节，主要负责对精排输出的候选集进行最终调整和优化，以提升整体推荐效果。与精排不同，重排阶段可以：</p>\n<ol>\n<li><strong>全局优化</strong>：考虑候选集整体的多样性、新颖性和覆盖度\n<ul>\n<li>解决方案：基于贪心算法、整数规划、强化学习等方法</li>\n</ul>\n</li>\n<li><strong>考虑上下文</strong>：将用户当前状态、历史交互和页面展示效果纳入考量\n<ul>\n<li>解决方案：序列模型、注意力机制、图神经网络等</li>\n</ul>\n</li>\n<li><strong>实时反馈</strong>：能够利用用户最新的交互信号进行实时调整\n<ul>\n<li>解决方案：在线学习、增量更新、边缘计算等</li>\n</ul>\n</li>\n</ol>\n<p>重排的主要技术方法包括：</p>\n<ol>\n<li><strong>基于规则的重排</strong>\n<ul>\n<li>多样性规则：控制同类内容比例、打散相似内容</li>\n<li>约束规则：业务规则、合规要求、运营干预等</li>\n<li>优点：可解释性强，易于实现和调整</li>\n<li>局限：难以捕捉复杂模式，规则维护成本高</li>\n</ul>\n</li>\n<li><strong>基于模型的重排</strong>\n<ul>\n<li>全局排序模型：DLCM (Deep Listwise Context Model)、PRM (Personalized Re-ranking Model)</li>\n<li>序列感知模型：SetRank、IRGPR (Intent-aware Re-ranking with Graph Neural Networks)</li>\n<li>优点：能够学习复杂的全局依赖关系，提升整体推荐质量</li>\n<li>局限：计算复杂度高，实时性要求高</li>\n</ul>\n</li>\n<li><strong>基于强化学习的重排</strong>\n<ul>\n<li>策略梯度方法：REINFORCE、Actor-Critic</li>\n<li>值函数方法：DQN、Double DQN</li>\n<li>优点：能够直接优化长期收益，处理延迟反馈</li>\n<li>局限：训练不稳定，样本效率低</li>\n</ul>\n</li>\n<li><strong>边缘计算重排</strong>\n<ul>\n<li>轻量级模型：EdgeRec（阿里开源）、MobileRec</li>\n<li>模型压缩：量化、剪枝、知识蒸馏</li>\n<li>优点：低延迟，能够利用端侧实时信息</li>\n<li>局限：模型能力受限，依赖端侧计算资源</li>\n</ul>\n</li>\n</ol>\n<p>重排面临的主要挑战：</p>\n<ol>\n<li><strong>实时性与复杂性平衡</strong>：如何在毫秒级响应时间内完成复杂的全局优化\n<ul>\n<li>解决方案：模型压缩、计算优化、分布式处理</li>\n</ul>\n</li>\n<li><strong>评估指标多元化</strong>：如何平衡点击率、多样性、用户满意度等多维度指标\n<ul>\n<li>解决方案：多目标优化、加权评分、A/B测试</li>\n</ul>\n</li>\n<li><strong>冷启动与探索</strong>：如何在重排阶段引入探索机制，避免推荐系统固化\n<ul>\n<li>解决方案：Thompson采样、上下文赌臂算法、探索-利用平衡</li>\n</ul>\n</li>\n<li><strong>个性化与公平性</strong>：如何在满足个性化的同时保证算法公平性和内容多样性\n<ul>\n<li>解决方案：公平性约束、多样性指标、伦理审计</li>\n</ul>\n</li>\n</ol>\n<p>例如，序列重排：</p>\n\n<h3 id=\"数据层\">数据层</h3>\n<p>数据层是推荐系统的基础，负责数据的收集、处理和存储，为上层算法提供高质量的数据支持。一个完善的数据层架构通常包括以下几个关键组件：</p>\n<ol>\n<li>\n<p><strong>数据采集系统</strong></p>\n<ul>\n<li>埋点设计、采集方案和数据流设计</li>\n<li><strong>用户行为数据</strong>：点击、浏览、停留时间、收藏、分享、评论等</li>\n<li><strong>内容特征数据</strong>：文本、图像、视频、音频的结构化和非结构化特征</li>\n<li><strong>上下文数据</strong>：时间、地点、设备、网络环境等</li>\n<li><strong>业务数据</strong>：交易、支付、退款、客服互动等</li>\n</ul>\n</li>\n<li>\n<p><strong>数据处理框架</strong></p>\n<ul>\n<li><strong>实时处理</strong>：Kafka、Flink、Spark Streaming等</li>\n<li><strong>离线处理</strong>：Hadoop、Spark、Hive等</li>\n<li><strong>特征存储</strong>：Redis、HBase、Cassandra、特征存储系统(如阿里的FeatureStore)</li>\n</ul>\n</li>\n<li>\n<p><strong>特征工程系统</strong></p>\n<ul>\n<li><strong>特征提取</strong>：从原始数据中提取有价值的信号</li>\n<li><strong>特征变换</strong>：归一化、标准化、离散化、编码等</li>\n<li><strong>特征选择</strong>：过滤、包装、嵌入式方法等</li>\n<li><strong>特征组合</strong>：交叉特征、多域特征融合等</li>\n</ul>\n</li>\n<li>\n<p><strong>用户理解系统</strong></p>\n<ul>\n<li><strong>数据层</strong>：构建全面的用户画像基础\n<ul>\n<li>全面收集用户基础信息、行为信息、时空信息及设备信息</li>\n<li>依赖成熟的实时数据采集框架支持</li>\n<li>确保数据的全面性、实时性和准确性</li>\n</ul>\n</li>\n<li><strong>洞察层</strong>：深度分析用户特征\n<ul>\n<li>用户价值洞察：消费能力、活跃度、忠诚度等</li>\n<li>行为模式洞察：浏览习惯、购买周期、兴趣变化等</li>\n<li>生命周期洞察：新用户、成长期、成熟期、流失风险等</li>\n<li>标签体系建设：需求强度标签、价格敏感度标签、行为序列模式标签等</li>\n</ul>\n</li>\n<li><strong>理解层</strong>：用户偏好与意图解析\n<ul>\n<li>显式理解：\n<ul>\n<li>用户行为筛选与分析（物料、类目偏好等）</li>\n<li>兴趣标签抽取与权重计算</li>\n<li>用户群体聚类与相似用户发现（Lookalike模型）</li>\n<li>高层意图推断（购买力、品牌偏好、决策周期等）</li>\n<li>用户生命周期全链路理解（从浏览到购买决策的完整路径）</li>\n</ul>\n</li>\n<li>隐式理解/表达：\n<ul>\n<li>多维度用户行为向量化表达</li>\n<li>多模态行为序列建模（短期、长期、超长期）</li>\n<li>行为序列的隐式语义挖掘</li>\n<li>生命周期的连续性表达</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>可解释性建设</strong>：\n<ul>\n<li>基于相似用户和商品的推荐解释机制</li>\n<li>基于文本和视觉内容的推荐理由生成</li>\n<li>通过社交关系网络增强推荐可信度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n\n<p>数据层的核心挑战包括：</p>\n<ol>\n<li><strong>数据质量保障</strong>\n<ul>\n<li>完整性：确保数据无缺失、无重复</li>\n<li>准确性：确保数据真实反映用户行为和内容特征</li>\n<li>时效性：确保数据能够及时更新和处理</li>\n</ul>\n</li>\n<li><strong>数据规模处理</strong>\n<ul>\n<li>海量数据存储：PB级数据的高效存储和检索</li>\n<li>高并发处理：每秒百万级请求的实时处理</li>\n<li>低延迟访问：毫秒级的特征获取和计算</li>\n</ul>\n</li>\n<li><strong>数据隐私保护</strong>\n<ul>\n<li>数据脱敏：敏感信息的加密和匿名化</li>\n<li>访问控制：严格的数据访问权限管理</li>\n<li>合规处理：符合GDPR、CCPA等隐私法规</li>\n</ul>\n</li>\n</ol>\n<p>在实际应用中，大型推荐系统通常采用Lambda架构或Kappa架构，结合批处理和流处理能力，以满足不同场景下的数据处理需求。</p>\n<h3 id=\"推荐系统的评估\">推荐系统的评估</h3>\n<p>推荐系统的评估是确保系统有效性和持续优化的关键环节，主要分为线上业务指标和离线模型指标两大类：</p>\n<p>线上/业务指标</p>\n<p>线上指标直接反映推荐系统对业务的实际影响，是最终评判系统价值的关键：</p>\n<ol>\n<li><strong>转化率指标</strong>\n<ul>\n<li>点击率(CTR)：用户点击推荐内容的比例</li>\n<li>购买转化率(CVR)：从推荐到最终购买的转化比例</li>\n<li>下单率(Order Rate)：用户通过推荐系统产生订单的比例</li>\n<li>留存率(Retention Rate)：推荐系统对用户留存的提升效果</li>\n</ul>\n</li>\n<li><strong>推荐质量指标</strong>\n<ul>\n<li>覆盖率(Coverage)：推荐系统能够推荐的物品占总物品的比例</li>\n<li>多样性(Diversity)：推荐结果的类别丰富程度</li>\n<li>新颖性(Novelty)：推荐结果中新内容的比例</li>\n<li>相关性(Relevance)：推荐内容与用户兴趣的匹配度</li>\n<li>时效性(Timeliness)：推荐内容的实时更新能力</li>\n</ul>\n</li>\n<li><strong>用户满意度指标</strong>\n<ul>\n<li>用户反馈评分：用户对推荐内容的直接评价</li>\n<li>停留时长：用户在推荐内容上的停留时间</li>\n<li>互动深度：评论、分享、收藏等深度互动行为</li>\n<li>NPS(净推荐值)：用户推荐意愿的综合评分</li>\n<li>用户投诉率：对推荐内容不满的反馈比例</li>\n</ul>\n</li>\n</ol>\n<p>离线/模型链路指标</p>\n<p>离线指标主要用于算法迭代和模型优化，按推荐系统的不同阶段有不同的评估重点：</p>\n<ol>\n<li><strong>召回阶段指标</strong>\n<ul>\n<li>Recall(召回率)：正确召回的相关物品占所有相关物品的比例</li>\n<li>Precision(精确率)：正确召回的物品占所有召回物品的比例</li>\n<li>F1 Score：Recall和Precision的调和平均</li>\n<li>Hit Rate：至少一次命中的比例</li>\n<li>NS-recall/NS-precision：考虑负采样的召回/精确率</li>\n<li>KL散度：评估推荐分布与真实分布的差异</li>\n<li>长尾覆盖率：对非热门内容的推荐能力</li>\n</ul>\n</li>\n<li><strong>粗排阶段指标</strong>\n<ul>\n<li>AUC(曲线下面积)：模型区分正负样本的能力</li>\n<li>GAUC(分组AUC)：考虑用户分组的AUC加权</li>\n<li>MAP(平均精度均值)：考虑排序位置的精确率</li>\n<li><strong>与精排一致性</strong>：粗排结果与精排打分的相关性</li>\n<li>计算效率：处理速度和资源消耗</li>\n</ul>\n</li>\n<li><strong>精排和重排阶段指标</strong>\n<ul>\n<li>场景化AUC/GAUC：不同场景下的区分能力</li>\n<li>分类目/人群AUC：针对不同类目和用户群体的表现</li>\n<li>NDCG(归一化折损累计增益)：考虑位置权重的排序质量</li>\n<li>MRR(平均倒数排名)：相关项排名的倒数平均</li>\n<li>商业目标达成度：GMV、收入等业务指标的提升</li>\n<li>公平性指标：不同用户群体获得推荐质量的均衡性</li>\n</ul>\n</li>\n</ol>\n<p>评估体系的构建原则</p>\n<ol>\n<li><strong>多维度评估</strong>：单一指标无法全面反映系统质量，需要构建多维度的评估体系</li>\n<li><strong>线上线下结合</strong>：离线指标提供快速迭代基础，线上指标验证实际业务价值</li>\n<li><strong>短期长期平衡</strong>：兼顾即时转化与用户长期价值</li>\n<li><strong>A/B测试验证</strong>：通过对照实验验证模型迭代的实际效果</li>\n<li><strong>持续监控与优化</strong>：建立实时监控机制，及时发现并解决问题</li>\n</ol>\n<p>推荐系统的评估是一个动态过程，需要根据业务发展阶段和用户需求变化不断调整评估指标和权重，确保系统持续为用户和平台创造价值。</p>\n\n<h2 id=\"参考\">参考</h2>\n<ul>\n<li><a href=\"https://www.datafuntalk.com/p/t_pc/course_pc_detail/image_text/i_64365c0ae4b0cf39e6ba78bc\">DataFunTalk：推荐系统综述</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm88sbd7300045gl40vmsd10a","category_id":"cm88sbd7300055gl423k24d2q","_id":"cm88sbd7400085gl425tf238g"}],"PostTag":[{"post_id":"cm88sbd7300045gl40vmsd10a","tag_id":"cm88sbd7400065gl42cvwe88q","_id":"cm88sbd7400095gl49w45fq8s"},{"post_id":"cm88sbd7300045gl40vmsd10a","tag_id":"cm88sbd7400075gl4618145em","_id":"cm88sbd74000a5gl4gx756foq"}],"Tag":[{"name":"搜广推","_id":"cm88sbd7400065gl42cvwe88q"},{"name":"人工智能和机器学习","_id":"cm88sbd7400075gl4618145em"}]}}